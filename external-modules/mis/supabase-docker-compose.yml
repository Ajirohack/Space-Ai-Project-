version: "3.9"

services:
  kong:
    image: kong:3.5.0
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=127.0.0.1:8001
    ports:
      - "8000:8000"
    volumes:
      - ./volumes/api/kong.yml:/var/lib/kong/kong.yml:ro
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: supabase/postgres:15.1.0.117
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?database password is required}
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    command: 
      - "postgres"
      - "-c"
      - "password_encryption=scram-sha-256"
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rest:
    image: postgrest/postgrest:v11.2.0
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD:?database password is required}@db:5432/postgres
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET:?jwt secret is required}
      PGRST_DB_SCHEMA: public
    ports:
      - "3000:3000"

  studio:
    image: supabase/studio:20240101-5e4efb1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8081:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  auth:
    image: supabase/gotrue:v2.132.3
    depends_on:
      db:
        condition: service_healthy
    environment:
      GOTRUE_JWT_SECRET: ${JWT_SECRET:?jwt secret is required}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_SITE_URL: ${SITE_URL:-http://localhost:3000}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT:-587}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME: SpaceWh AI Platform
      GOTRUE_MAILER_AUTOCONFIRM: "false"
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_OPERATOR_TOKEN: ${OPERATOR_TOKEN:?operator token is required}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_HOST: db
      GOTRUE_DB_PORT: 5432
      GOTRUE_DB_NAME: postgres
      GOTRUE_DB_USER: postgres
      GOTRUE_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "9999:9999"

  supabase-db:
    image: supabase/postgres:15.1.0.90
    container_name: supabase-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: supa_password
      POSTGRES_DB: postgres
    volumes:
      - supabase-db:/var/lib/postgresql/data

  supabase-rest:
    image: postgrest/postgrest
    container_name: supabase-rest
    depends_on:
      - supabase-db
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:supa_password@supabase-db:5432/postgres
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: supersecretjwt

volumes:
  supabase_db_data:
  supabase-db:
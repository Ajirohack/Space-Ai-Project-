!function(){try{var n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},e=(new n.Error).stack;e&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[e]="ca2a65c2-ae52-4fc5-8b6d-141a5ed331ae",n._sentryDebugIdIdentifier="sentry-dbid-ca2a65c2-ae52-4fc5-8b6d-141a5ed331ae")}catch(n){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9258],{92813:function(n,e,t){t.d(e,{G7:function(){return c},O3:function(){return s}});var a=t(28894),r=t(64472),i=t(77038);async function o(n,e){let{projectRef:t}=n;if(!t)throw Error("projectRef is required");let{data:a,error:i}=await (0,r.U2)("/platform/projects/{ref}/analytics/endpoints/usage.api-requests-count",{params:{path:{ref:t}},signal:e});return i&&(0,r.S3)(i),a}let c=function(n){let{projectRef:e}=n,{enabled:t=!0,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,a.a)(i.d.usageApiRequestsCount(e),n=>{let{signal:t}=n;return o({projectRef:e},t)},{enabled:t&&void 0!==e,...r})};function s(n,e){let{projectRef:t}=e;return n.fetchQuery(i.d.usageApiRequestsCount(t),n=>{let{signal:e}=n;return o({projectRef:t},e)})}},34911:function(n,e,t){t.d(e,{Ey:function(){return c},OU:function(){return s}});var a=t(28894),r=t(64472),i=t(77038);async function o(n,e){let{projectRef:t,interval:a}=n;if(!t)throw Error("projectRef is required");if(!a)throw Error("interval is required");let{data:i,error:o}=await (0,r.U2)("/platform/projects/{ref}/analytics/endpoints/usage.api-counts",{params:{path:{ref:t},query:{interval:a}},signal:e});return o&&(0,r.S3)(o),i}let c=function(n){let{projectRef:e,interval:t}=n,{enabled:r=!0,...c}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,a.a)(i.d.usageApiCounts(e,t),n=>{let{signal:a}=n;return o({projectRef:e,interval:t},a)},{enabled:r&&void 0!==e&&void 0!==t,...c})};function s(n,e){let{projectRef:t,interval:a}=e;return n.fetchQuery(i.d.usageApiCounts(t,a),n=>{let{signal:e}=n;return o({projectRef:t,interval:a},e)})}},10452:function(n,e,t){t.d(e,{Q1:function(){return l},XL:function(){return d},jc:function(){return u}});var a=t(76125),r=t(28894),i=t(89089),o=t(36337);let c=a.Z.schemas.list();async function s(n,e){let{projectRef:t,connectionString:a}=n,{result:r}=await (0,i.R)({projectRef:t,connectionString:a,sql:c.sql,queryKey:["schemas"]},e);return r}let l=function(n){let{projectRef:e,connectionString:t}=n,{enabled:a=!0,...i}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,r.a)(o.A.schemas(e),n=>{let{signal:a}=n;return s({projectRef:e,connectionString:t},a)},{enabled:a&&void 0!==e,...i})};function d(n,e){return n.invalidateQueries(o.A.schemas(e))}function u(n,e){let{projectRef:t,connectionString:a}=e;return n.fetchQuery(o.A.schemas(t),n=>{let{signal:e}=n;return s({projectRef:t,connectionString:a},e)})}},21599:function(n,e,t){var a,r;t.d(e,{l:function(){return a}}),(r=a||(a={})).TABLE="r",r.VIEW="v",r.MATERIALIZED_VIEW="m",r.FOREIGN_TABLE="f",r.PARTITIONED_TABLE="p"},17484:function(n,e,t){t.d(e,{Hp:function(){return s},rE:function(){return l}});var a=t(90688),r=t(89089),i=t(21599),o=t(98095);async function c(n,e){let{projectRef:t,connectionString:a,schemas:o=["public"],search:c,limit:s=100,page:l=0,sort:d="alphabetical",filterTypes:u=Object.values(i.l)}=n,m='\n    with records as (\n      select\n        c.oid::int8 as "id",\n        nc.nspname as "schema",\n        c.relname as "name",\n        c.relkind as "type",\n        case c.relkind\n          when \'r\' then 1\n          when \'v\' then 2\n          when \'m\' then 3\n          when \'f\' then 4\n          when \'p\' then 5\n        end as "type_sort",\n        obj_description(c.oid) as "comment",\n        count(*) over() as "count",\n        c.relrowsecurity as "rls_enabled"\n      from\n        pg_namespace nc\n        join pg_class c on nc.oid = c.relnamespace\n      where\n        c.relkind in ('.concat(u.map(n=>"'".concat(n,"'")).join(", "),")\n        and not pg_is_other_temp_schema(nc.oid)\n        and (\n          pg_has_role(c.relowner, 'USAGE')\n          or has_table_privilege(\n            c.oid,\n            'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'\n          )\n          or has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES')\n        )\n        and nc.nspname in (").concat(o.map(n=>"'".concat(n,"'")),")\n        ").concat(c?"and c.relname ilike '%".concat(c,"%'"):"","\n      order by ").concat("alphabetical"===d?"c.relname asc":'"type_sort" asc, c.relname asc',"\n      limit ").concat(s,"\n      offset ").concat(l*s,"\n    )\n    select\n      jsonb_build_object(\n        'entities', coalesce(jsonb_agg(\n          jsonb_build_object(\n            'id', r.id,\n            'schema', r.schema,\n            'name', r.name,\n            'type', r.type,\n            'comment', r.comment,\n            'rls_enabled', r.rls_enabled\n          )\n          order by ").concat("alphabetical"===d?"r.name asc":"r.type_sort asc, r.name asc","\n        ), '[]'::jsonb),\n        'count', coalesce(min(r.count), 0)\n      ) \"data\"\n    from records r;\n  "),{result:p}=await (0,r.R)({projectRef:t,connectionString:a,sql:m,queryKey:["entity-types",...o,l]},e);return p[0]}let s=function(n){let{projectRef:e,connectionString:t,schemas:r=["public"],search:i,limit:s=100,sort:l,filterTypes:d}=n,{enabled:u=!0,...m}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,a.N)(o.C.list(e,{schemas:r,search:i,sort:l,limit:s,filterTypes:d}),n=>{let{signal:a,pageParam:o}=n;return c({projectRef:e,connectionString:t,schemas:r,search:i,limit:s,page:o,sort:l,filterTypes:d},a)},{enabled:u&&void 0!==e,getNextPageParam(n,e){let t=e.length;if(!(t*s>=n.data.count))return t},...m})};function l(n,e){let{projectRef:t,connectionString:a,schemas:r=["public"],search:i,limit:s=100,sort:l,filterTypes:d}=e;return n.prefetchInfiniteQuery(o.C.list(t,{schemas:r,search:i,sort:l,limit:s,filterTypes:d}),n=>{let{signal:e,pageParam:o}=n;return c({projectRef:t,connectionString:a,schemas:r,search:i,limit:s,page:o,sort:l,filterTypes:d},e)})}},98095:function(n,e,t){t.d(e,{C:function(){return a}});let a={list:(n,e)=>["projects",n,"entity-types",...e?[e]:[]]}},50538:function(n,e,t){t.d(e,{X:function(){return a}});let a={lint:n=>["projects",n,"lint"],lintRules:n=>["projects",n,"lint-rules"]}},95150:function(n,e,t){t.d(e,{U:function(){return l}});var a=t(28894),r=t(64472),i=t(14612),o=t(73614),c=t(50538);async function s(n,e){let{projectRef:t}=n;if(!t)throw Error("Project ref is required");let{data:a,error:i}=await (0,r.U2)("/platform/projects/{ref}/run-lints",{params:{path:{ref:t}},signal:e});return i&&(0,r.S3)(i),a}let l=function(n){let{projectRef:e}=n,{enabled:t=!0,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},l=(0,i.Vm)(),d=(null==l?void 0:l.status)===o.S.ACTIVE_HEALTHY;return(0,a.a)(c.X.lint(e),n=>{let{signal:t}=n;return s({projectRef:e},t)},{enabled:t&&void 0!==e&&d,...r})}},89089:function(n,e,t){t.d(e,{R:function(){return o}});var a=t(64472);t(14612);var r=t(73614),i=t(92570);async function o(n,e,t){var o,c,s;let{projectRef:l,connectionString:d,sql:u,queryKey:m,handleError:p,isRoleImpersonationEnabled:f=!1}=n;if(!l)throw Error("projectRef is required");if(new Blob([u]).size>.98*r.MB)throw Error("Query is too large to be run via the SQL Editor");let g=new Headers(t);d&&g.set("x-connection-encrypted",d);let{data:h,error:b}=await (0,a.v_)("/platform/pg-meta/{ref}/query",{signal:e,params:{header:{"x-connection-encrypted":null!=d?d:""},path:{ref:l},query:{key:null!==(c=null==m?void 0:m.filter(n=>"string"==typeof n||"number"==typeof n).join("-"))&&void 0!==c?c:""}},body:{query:u},headers:g});if(b){if(f&&"object"==typeof b&&null!==b&&"error"in b&&"formattedError"in b){let n=b,e=/LINE (\d+):/im,[,t]=null!==(s=e.exec(n.error))&&void 0!==s?s:[],a=Number(t);isNaN(a)||(n={...n,error:n.error.replace(e,"LINE ".concat(a-i.Yc,":")),formattedError:n.formattedError.replace(e,"LINE ".concat(a-i.Yc,":"))}),b=n}if(void 0!==p)return p(b);(0,a.S3)(b)}return f&&Array.isArray(h)&&(null==h?void 0:null===(o=h[0])||void 0===o?void 0:o[i.$y])===1?{result:[]}:{result:h}}t(46752)},46752:function(n,e,t){t.d(e,{M:function(){return a}});let a={query:(n,e)=>["projects",n,"query",...e],ongoingQueries:n=>["projects",n,"ongoing-queries"]}},92570:function(n,e,t){t.d(e,{$y:function(){return o},Jh:function(){return c},Wn:function(){return u},Yc:function(){return i}});var a=t(9618);function r(n,e){let t=new Date;t.setTime(t.getTime()+36e5);let r=Math.floor(t.getTime()/1e3),i=Math.floor(Date.now()/1e3);if("authenticated"===e.role){var o,c,s;if("native"===e.userType&&e.user){let t=e.user;return{aal:null!==(o=e.aal)&&void 0!==o?o:"aal1",amr:[{method:"password",timestamp:i}],app_metadata:t.raw_app_meta_data,aud:"authenticated",email:t.email,exp:r,iat:i,iss:"https://".concat(n,".supabase.co/auth/v1"),phone:t.phone,role:null!==(c=t.role)&&void 0!==c?c:e.role,session_id:(0,a.k$)(),sub:t.id,user_metadata:t.raw_user_meta_data,is_anonymous:t.is_anonymous}}if("external"===e.userType&&e.externalAuth)return{aal:null!==(s=e.aal)&&void 0!==s?s:"aal1",aud:"authenticated",exp:r,iat:i,role:"authenticated",session_id:(0,a.k$)(),sub:e.externalAuth.sub,...e.externalAuth.additionalClaims}}return{iss:"supabase",ref:n,role:e.role,iat:i,exp:r}}let i=11,o="ROLE_IMPERSONATION_NO_RESULTS";function c(n,e){var t;let{projectRef:a,role:i}=e;if(void 0===i)return n;let c="postgrest"===i.type?function(n,e){let t=r(n,e);return"\n    select set_config('role', '".concat(e.role,"', true),\n           set_config('request.jwt.claims', '").concat(JSON.stringify(t).replaceAll("'","''"),"', true),\n           set_config('request.method', 'POST', true),\n           set_config('request.path', '/impersonation-example-request-path', true),\n           set_config('request.headers', '{\"accept\": \"*/*\"}', true);\n  ").trim()}(a,i):(t=i.role,"\n    set local role '".concat(t,"';\n  "));return"\n    ".concat(c,'\n\n    -- If the users sql returns no rows, pg-meta will\n    -- fallback to returning the result of the impersonation sql.\n    select 1 as "').concat(o,'";\n\n    ').concat(n,"\n  ")}function s(n){return new TextEncoder().encode(n)}function l(n){return btoa(String.fromCharCode(...new Uint8Array("string"==typeof n?s(n):n))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}async function d(n,e){let t=l(s(JSON.stringify({alg:"HS256",typ:"JWT"})))+"."+l(s(JSON.stringify(n))),a=l(new Uint8Array(await window.crypto.subtle.sign({name:"HMAC"},await window.crypto.subtle.importKey("raw",s(e),{name:"HMAC",hash:"SHA-256"},!1,["sign","verify"]),s(t))));return"".concat(t,".").concat(a)}function u(n,e,t){return d(r(n,t),e)}},69258:function(n,e,t){t.d(e,{Py:function(){return ne},ZG:function(){return K},PA:function(){return nn},YE:function(){return na},TZ:function(){return nr}});var a=t(97458),r=t(16402),i=t(59171),o=t(86474),c=t.n(o),s=t(14224),l=t(11691),d=t(89462),u=t.n(d),m=t(82943),p=t(52983),f=t(54580),g=t(74313),h=t(78702),b=t(29918),_=t(32305),E=t(99676),v=t(30681),y=t(32715),x=t(73614);let N=(n,e,t)=>{let{sqlEditorTabs:r}=null!=t?t:{},i=(null==e?void 0:e.status)===x.S.COMING_UP,o="/project/".concat(n);return[{key:"editor",label:"Table Editor",icon:(0,a.jsx)(y.dD,{size:K,strokeWidth:nn}),link:n&&(i?o:"/project/".concat(n,"/editor")),linkElement:(0,a.jsx)(v.Y,{projectRef:n})},{key:"sql",label:"SQL Editor",icon:(0,a.jsx)(y.vu,{size:K,strokeWidth:nn}),link:x.Qy?n&&(i?o:"/project/".concat(n,"/sql").concat(r?"":"/new")):"/project/".concat(n,"/sql/1")}]},A=(n,e,t)=>{var r,i,o,c;let s=(null==e?void 0:e.status)===x.S.ACTIVE_HEALTHY,l=(null==e?void 0:e.status)===x.S.COMING_UP,d="/project/".concat(n),u=null===(r=null==t?void 0:t.auth)||void 0===r||r,m=null===(i=null==t?void 0:t.edgeFunctions)||void 0===i||i,p=null===(o=null==t?void 0:t.storage)||void 0===o||o,f=null===(c=null==t?void 0:t.realtime)||void 0===c||c;return[{key:"database",label:"Database",icon:(0,a.jsx)(y.vo,{size:K,strokeWidth:nn}),link:n&&(l?d:s?"/project/".concat(n,"/database/schemas"):"/project/".concat(n,"/database/backups/scheduled"))},...u?[{key:"auth",label:"Authentication",icon:(0,a.jsx)(y.gx,{size:K,strokeWidth:nn}),link:n&&(l?d:"/project/".concat(n,"/auth/users"))}]:[],...p?[{key:"storage",label:"Storage",icon:(0,a.jsx)(y.Ke,{size:K,strokeWidth:nn}),link:n&&(l?d:"/project/".concat(n,"/storage/buckets"))}]:[],...x.Qy&&m?[{key:"functions",label:"Edge Functions",icon:(0,a.jsx)(y.hL,{size:K,strokeWidth:nn}),link:n&&(l?d:"/project/".concat(n,"/functions"))}]:[],...f?[{key:"realtime",label:"Realtime",icon:(0,a.jsx)(y.Z7,{size:K,strokeWidth:nn}),link:n&&(l?d:"/project/".concat(n,"/realtime/inspector"))}]:[]]},z=(n,e)=>{let t=(null==e?void 0:e.status)===x.S.COMING_UP,r="/project/".concat(n);return[{key:"advisors",label:"Advisors",icon:(0,a.jsx)(g.Z,{size:K,strokeWidth:nn}),link:n&&(t?r:"/project/".concat(n,"/advisors/security"))},...x.Qy?[{key:"reports",label:"Reports",icon:(0,a.jsx)(y.Aq,{size:K,strokeWidth:nn}),link:n&&(t?r:"/project/".concat(n,"/reports"))}]:[],{key:"logs",label:"Logs",icon:(0,a.jsx)(h.Z,{size:K,strokeWidth:nn}),link:n&&(t?r:"/project/".concat(n,"/logs"))},{key:"api",label:"API Docs",icon:(0,a.jsx)(b.Z,{size:K,strokeWidth:nn}),link:n&&(t?r:"/project/".concat(n,"/api"))},{key:"integrations",label:"Integrations",icon:(0,a.jsx)(_.Z,{size:K,strokeWidth:nn}),link:n&&(t?r:"/project/".concat(n,"/integrations"))}]},w=(n,e)=>[...x.Qy?[{key:"settings",label:"Project Settings",icon:(0,a.jsx)(E.Z,{size:K,strokeWidth:nn}),link:n&&"/project/".concat(n,"/settings/general")}]:[]];var S=t(41888),R=t(64758),I=t(72370),T=t(26950),j=t(95150);let L=()=>{let{ref:n}=(0,f.UO)(),{data:e}=(0,j.U)({projectRef:n}),t=(null!=e?e:[]).filter(n=>n.categories.includes("SECURITY")),a=t.filter(n=>"ERROR"===n.level);return{securityLints:t,errorLints:a}};var O=t(54528),C=t(55861),D=t(34596),k=t(76028),U=t(34814),M=t(94997),F=t(53355),$=t(65422),q=t(73289),H=t(87076),P=t(88466),W=t(98809),B=t(54888),G=t(42161);let Y=()=>{let{theme:n,setTheme:e}=(0,W.F)(),[t]=(0,O.l)(x.dA.SIDEBAR_BEHAVIOR,ne),r=(0,a.jsxs)("button",{"data-sidebar":"menu-button","data-has-icon":!0,className:(0,F.cn)((0,k.Rw)({variant:"default",size:"default",hasIcon:!0})),children:[(0,a.jsx)(P.Z,{size:K,strokeWidth:nn}),(0,a.jsx)("span",{children:"Theme"})]});return(0,a.jsxs)(U.h_,{"data-sentry-element":"DropdownMenu","data-sentry-component":"ThemeDropdown","data-sentry-source-file":"ThemeDropdown.tsx",children:["closed"===t?(0,a.jsxs)(B.u,{children:[(0,a.jsx)(B.aJ,{asChild:!0,children:(0,a.jsx)(U.$F,{asChild:!0,children:r})}),(0,a.jsx)(B._v,{side:"right",align:"center",children:(0,a.jsx)("span",{children:"Theme"})})]}):(0,a.jsx)(U.$F,{asChild:!0,children:r}),(0,a.jsx)(U.AW,{side:"top",align:"start","data-sentry-element":"DropdownMenuContent","data-sentry-source-file":"ThemeDropdown.tsx",children:(0,a.jsxs)(U.Qk,{"data-sentry-element":"DropdownMenuGroup","data-sentry-source-file":"ThemeDropdown.tsx",children:[(0,a.jsx)(U.Ju,{"data-sentry-element":"DropdownMenuLabel","data-sentry-source-file":"ThemeDropdown.tsx",children:"Theme"}),(0,a.jsx)(U._x,{value:n,onValueChange:n=>{e(n)},"data-sentry-element":"DropdownMenuRadioGroup","data-sentry-source-file":"ThemeDropdown.tsx",children:G.J.map(n=>(0,a.jsx)(U.qB,{value:n.value,children:n.name},n.value))})]})})]})};var J=t(76874),V=t(89150),Z=t(6761),Q=t(65770);let X=()=>{let{profile:n}=(0,Q.Un)(),e=(0,D.WZ)(),{theme:t,setTheme:r}=(0,W.F)(),i=(0,Z.QJ)(),o=(0,I.useRouter)(),c=(0,q.FX)();return(0,a.jsxs)(U.h_,{"data-sentry-element":"DropdownMenu","data-sentry-component":"UserDropdown","data-sentry-source-file":"UserDropdown.tsx",children:[(0,a.jsx)(U.$F,{asChild:!0,"data-sentry-element":"DropdownMenuTrigger","data-sentry-source-file":"UserDropdown.tsx",children:(0,a.jsx)(k.bb,{className:(0,F.cn)("text-sm","group-data-[state=expanded]:h-10","p-0.5 group-data-[state=expanded]:pr-2 group-data-[state=expanded]:pl-1"),size:"default",hasIcon:!1,asChild:!0,isActive:!1,"data-sentry-element":"SidebarMenuButton","data-sentry-source-file":"UserDropdown.tsx",children:(0,a.jsxs)("button",{children:[(0,a.jsx)("div",{className:"aspect-square h-7 w-7 rounded-md border flex-shrink-0",children:(0,a.jsx)(V.m,{alt:null==n?void 0:n.username,src:null==n?void 0:n.profileImageUrl,className:"w-7 h-7 rounded-md","data-sentry-element":"ProfileImage","data-sentry-source-file":"UserDropdown.tsx"})}),(0,a.jsxs)("span",{className:"flex flex-col gap-0",children:[null==n?void 0:n.username,(0,a.jsx)("span",{className:"text-foreground-lighter text-xs",children:null==n?void 0:n.primary_email})]})]})})}),(0,a.jsxs)(U.AW,{side:"top",align:"start","data-sentry-element":"DropdownMenuContent","data-sentry-source-file":"UserDropdown.tsx",children:[x.Qy&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"px-2 py-1 flex flex-col gap-0 text-sm",children:n&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("span",{title:n.username,className:"w-full text-left text-foreground truncate",children:n.username}),n.primary_email!==n.username&&(0,a.jsx)("span",{title:n.primary_email,className:"w-full text-left text-foreground-light text-xs truncate",children:n.primary_email})]})}),(0,a.jsx)(U.VD,{}),(0,a.jsxs)(U.Qk,{children:[(0,a.jsx)(U.Xi,{className:"flex gap-2",asChild:!0,children:(0,a.jsxs)(u(),{href:"/account/me",children:[(0,a.jsx)(E.Z,{size:14,strokeWidth:1.5,className:"text-foreground-lighter"}),"Account preferences"]})}),(0,a.jsxs)(U.Xi,{className:"flex gap-2",onClick:()=>e.setShowFeaturePreviewModal(!0),onSelect:()=>e.setShowFeaturePreviewModal(!0),children:[(0,a.jsx)(J.Z,{size:14,strokeWidth:1.5,className:"text-foreground-lighter"}),"Feature previews"]}),(0,a.jsxs)(U.Xi,{className:"flex gap-2",onClick:()=>c(!0),children:[(0,a.jsx)(l.Z,{size:14,strokeWidth:1.5,className:"text-foreground-lighter"}),"Command menu"]}),(0,a.jsx)(U.VD,{})]})]}),(0,a.jsxs)(U.Qk,{"data-sentry-element":"DropdownMenuGroup","data-sentry-source-file":"UserDropdown.tsx",children:[(0,a.jsx)(U.Ju,{"data-sentry-element":"DropdownMenuLabel","data-sentry-source-file":"UserDropdown.tsx",children:"Theme"}),(0,a.jsx)(U._x,{value:t,onValueChange:n=>{r(n)},"data-sentry-element":"DropdownMenuRadioGroup","data-sentry-source-file":"UserDropdown.tsx",children:G.J.map(n=>(0,a.jsx)(U.qB,{value:n.value,children:n.name},n.value))})]}),x.Qy&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(U.VD,{}),(0,a.jsx)(U.Qk,{children:(0,a.jsx)(U.Xi,{onSelect:async()=>{await i(),await o.push("/sign-in")},children:"Log out"})})]})]})]})},K=32,nn=1.5,ne="expandable",nt=(0,r.E)(k.DD),na=n=>{let{className:e,...t}=n,{setOpen:r}=(0,k.Ap)(),o=function(){var n;let e=null!==(n=(0,I.usePathname)())&&void 0!==n?n:"";return e.startsWith("/account")||e.startsWith("/new")||"/organizations"===e}(),[c,l]=(0,O.l)(x.dA.SIDEBAR_BEHAVIOR,ne);return(0,p.useEffect)(()=>{"open"===c&&r(!0),"closed"===c&&r(!1)},[c,r]),(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(i.M,{"data-sentry-element":"AnimatePresence","data-sentry-source-file":"Sidebar.tsx",children:!o&&(0,a.jsx)(nt,{...t,transition:{delay:.4,duration:.4},overflowing:"expandable"===c,collapsible:"icon",variant:"sidebar",onMouseEnter:()=>{"expandable"===c&&r(!0)},onMouseLeave:()=>{"expandable"===c&&r(!1)},children:(0,a.jsx)(nr,{footer:(0,a.jsxs)(U.h_,{children:[(0,a.jsx)(U.$F,{asChild:!0,children:(0,a.jsx)(M.z,{type:"text",className:"w-min px-1.5 mx-0.5 group-data-[state=expanded]:px-2",icon:(0,a.jsx)(s.Z,{size:K,strokeWidth:nn})})}),(0,a.jsx)(U.AW,{side:"top",align:"start",className:"w-40",children:(0,a.jsxs)(U._x,{value:c,onValueChange:n=>l(n),children:[(0,a.jsx)(U.Ju,{children:"Sidebar control"}),(0,a.jsx)(U.VD,{}),(0,a.jsx)(U.qB,{value:"open",children:"Expanded"}),(0,a.jsx)(U.qB,{value:"closed",children:"Collapsed"}),(0,a.jsx)(U.qB,{value:"expandable",children:"Expand on hover"})]})})]})})})})})};function nr(n){let{footer:e}=n,t=(0,q.FX)(),o=(0,m.useRouter)(),{ref:c}=(0,f.UO)(),{project:s}=(0,S.d2)(),d=w(c,s),u=o.pathname.split("/")[3];return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.M,{mode:"wait","data-sentry-element":"AnimatePresence","data-sentry-source-file":"Sidebar.tsx",children:(0,a.jsx)(k.TZ,{"data-sentry-element":"SidebarContentPrimitive","data-sentry-source-file":"Sidebar.tsx",children:(0,a.jsx)(r.E.div,{"data-sentry-element":"unknown","data-sentry-source-file":"Sidebar.tsx",children:(0,a.jsx)(nc,{"data-sentry-element":"ProjectLinks","data-sentry-source-file":"Sidebar.tsx"})},"project-links")})}),(0,a.jsxs)(k.ZW,{"data-sentry-element":"SidebarFooter","data-sentry-source-file":"Sidebar.tsx",children:[(0,a.jsxs)(k.w3,{className:"group-data-[state=expanded]:p-0","data-sentry-element":"SidebarMenu","data-sentry-source-file":"Sidebar.tsx",children:[(0,a.jsx)(k.Hz,{className:"p-0 gap-0.5","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:d.map(n=>(0,a.jsx)(ni,{route:n,active:u===n.key},"settings-routes-".concat(n.key)))}),(0,a.jsx)(k.Hz,{className:"p-0","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:(0,a.jsx)(ni,{route:{key:"cmdk",label:"Command Menu",icon:(0,a.jsx)(l.Z,{size:K,strokeWidth:nn})},onClick:()=>t(!0),"data-sentry-element":"SideBarNavLink","data-sentry-source-file":"Sidebar.tsx"},"cmdk")})]}),(0,a.jsx)(k.w3,{className:"group-data-[state=expanded]:p-0","data-sentry-element":"SidebarMenu","data-sentry-source-file":"Sidebar.tsx",children:(0,a.jsx)(k.Hz,{className:"p-0","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:x.Qy?(0,a.jsx)(X,{}):(0,a.jsx)(Y,{})})}),(0,a.jsx)(k.Hz,{className:"p-0","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:e})]})]})}function ni(n){let{route:e,active:t,onClick:r,...i}=n,[o]=(0,O.l)(x.dA.SIDEBAR_BEHAVIOR,ne),c={tooltip:"closed"===o?e.label:"",isActive:t,className:"text-sm",size:"default",onClick:r},s=i.children?i.children:(0,a.jsxs)(a.Fragment,{children:[e.icon,(0,a.jsx)("span",{children:e.label})]});return(0,a.jsx)(k.LO,{"data-sentry-element":"SidebarMenuItem","data-sentry-component":"SideBarNavLink","data-sentry-source-file":"Sidebar.tsx",children:e.link?(0,a.jsx)(k.bb,{...c,asChild:!0,children:(0,a.jsx)(u(),{href:e.link,children:s})}):(0,a.jsx)(k.bb,{...c,children:s})})}let no=(n,e)=>(0,a.jsx)("div",{className:(0,F.cn)("absolute pointer-events-none flex h-2 w-2 left-[18px] group-data-[state=expanded]:left-[20px] top-2 z-10 rounded-full",n.length>0?"bg-destructive-600":e.length>0?"bg-warning-600":"bg-transparent"),"data-sentry-component":"ActiveDot","data-sentry-source-file":"Sidebar.tsx"});function nc(){let n=(0,m.useRouter)(),{ref:e}=(0,f.UO)(),{project:t}=(0,S.d2)(),r=(0,D.WZ)(),i=(0,H.cg)(),{securityLints:o,errorLints:s}=L(),l=(0,C.P)("warehouse"),d=(0,H.Ff)(),u=n.pathname.split("/")[3],{projectAuthAll:p,projectEdgeFunctionAll:g,projectStorageAll:h,realtimeAll:b}=(0,T.N)(["project_auth:all","project_edge_function:all","project_storage:all","realtime:all"]),_=N(e,t,{sqlEditorTabs:d}),E=A(e,t,{auth:p,edgeFunctions:g,storage:h,realtime:b}),v=z(e,t);return(0,a.jsxs)(k.w3,{"data-sentry-element":"SidebarMenu","data-sentry-component":"ProjectLinks","data-sentry-source-file":"Sidebar.tsx",children:[(0,a.jsxs)(k.Hz,{className:"gap-0.5","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:[(0,a.jsx)(ni,{active:c()(u)&&!c()(n.query.ref),route:{key:"HOME",label:"Project overview",icon:(0,a.jsx)(y.SK,{size:K,strokeWidth:nn}),link:"/project/".concat(e),linkElement:(0,a.jsx)(R.I,{projectRef:e})},"data-sentry-element":"SideBarNavLink","data-sentry-source-file":"Sidebar.tsx"},"home"),_.map((n,e)=>(0,a.jsx)(ni,{route:n,active:u===n.key},"tools-routes-".concat(e)))]}),(0,a.jsx)($.Z,{className:"w-[calc(100%-1rem)] mx-auto","data-sentry-element":"Separator","data-sentry-source-file":"Sidebar.tsx"}),(0,a.jsx)(k.Hz,{className:"gap-0.5","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:E.map((n,e)=>(0,a.jsx)(ni,{route:n,active:u===n.key},"product-routes-".concat(e)))}),(0,a.jsx)($.Z,{className:"w-[calc(100%-1rem)] mx-auto","data-sentry-element":"Separator","data-sentry-source-file":"Sidebar.tsx"}),(0,a.jsx)(k.Hz,{className:"gap-0.5","data-sentry-element":"SidebarGroup","data-sentry-source-file":"Sidebar.tsx",children:v.map((n,e)=>{if("api"===n.key&&i)return(0,a.jsx)(ni,{route:{label:n.label,icon:n.icon,key:n.key},onClick:()=>{r.setShowProjectApiDocs(!0)}},"other-routes-".concat(e));if("advisors"===n.key)return(0,a.jsxs)("div",{className:"relative",children:[no(s,o),(0,a.jsx)(ni,{route:n,active:u===n.key},"other-routes-".concat(e))]},n.key);if("logs"!==n.key)return(0,a.jsx)(ni,{route:n,active:u===n.key},"other-routes-".concat(e));{let t=l?"Logs & Analytics":n.label,r={...n,label:t};return(0,a.jsx)(ni,{route:r,active:u===r.key},"other-routes-".concat(e))}})})]})}},26915:function(n,e,t){var a=t(97458),r=t(89462),i=t.n(r),o=t(52983);let c=(0,o.forwardRef)(function(n,e){let{prefetcher:t,children:r,...c}=n,s=(0,o.useRef)(null),l=(0,o.useRef)(null);function d(){let n=Date.now();s.current&&n-s.current>=75&&t()}return(0,a.jsx)(i(),{ref:e,...c,onMouseEnter:function(){s.current=Date.now(),l.current=window.setTimeout(d,75)},onMouseLeave:function(){s.current=null,l.current&&(clearTimeout(l.current),l.current=null)},children:r})});e.Z=c},30681:function(n,e,t){t.d(e,{Y:function(){return p}});var a=t(97458),r=t(36457),i=t(82943),o=t(52983),c=t(41888),s=t(10452),l=t(21599),d=t(17484),u=t(54528),m=t(26915);function p(n){let{href:e,projectRef:t,children:p,...f}=n,g=function(){let n=(0,i.useRouter)(),e=(0,r.NL)(),{project:t}=(0,c.d2)(),[a]=(0,u._)("table-editor-sort","alphabetical");return(0,o.useCallback)(()=>{t&&(n.prefetch("/project/".concat(t.ref,"/editor")),(0,s.jc)(e,{projectRef:t.ref,connectionString:t.connectionString}).catch(()=>{}),(0,d.rE)(e,{projectRef:null==t?void 0:t.ref,connectionString:null==t?void 0:t.connectionString,sort:a,filterTypes:Object.values(l.l)}).catch(()=>{}))},[a,t,e,n])}();return(0,a.jsx)(m.Z,{href:e||"/project/".concat(t,"/editor"),prefetcher:g,...f,"data-sentry-element":"PrefetchableLink","data-sentry-component":"EditorIndexPageLink","data-sentry-source-file":"project.$ref.editor.tsx",children:p})}},64758:function(n,e,t){t.d(e,{I:function(){return u}});var a=t(97458),r=t(36457),i=t(82943),o=t(52983),c=t(92813),s=t(34911),l=t(63458),d=t(26915);function u(n){let{href:e,projectRef:t,children:u,...m}=n,p=function(){let n=(0,i.useRouter)(),e=(0,r.NL)();return(0,o.useCallback)(t=>{let{projectRef:a}=t;n.prefetch("/project/".concat(a)),(0,l.ft)(e,{ref:a}).catch(()=>{}),(0,c.O3)(e,{projectRef:a}).catch(()=>{}),(0,s.OU)(e,{projectRef:a,interval:"hourly"}).catch(()=>{})},[e,n])}();return(0,a.jsx)(d.Z,{href:e||"/project/".concat(t),prefetcher:()=>p({projectRef:t}),...m,"data-sentry-element":"PrefetchableLink","data-sentry-component":"ProjectIndexPageLink","data-sentry-source-file":"project.$ref.tsx",children:u})}},88197:function(n,e,t){t.d(e,{z:function(){return l}});var a=t(97458),r=t(13261),i=t(31706),o=t(52983),c=t(53355);let s=(0,i.j)("inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-foreground-muted focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-blue-300 text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-control bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),l=o.forwardRef((n,e)=>{let{className:t,variant:i,size:o,asChild:l=!1,...d}=n,u=l?r.g7:"button";return(0,a.jsx)(u,{className:(0,c.cn)(s({variant:i,size:o,className:t})),ref:e,...d})});l.displayName="Button"},76028:function(n,e,t){t.d(e,{DD:function(){return _},TZ:function(){return v},ZW:function(){return E},Hz:function(){return y},w3:function(){return x},bb:function(){return z},LO:function(){return N},Hn:function(){return b},Rw:function(){return A},Ap:function(){return h}});var a=t(97458),r=t(52983),i=t(13261),o=t(31706),c=t(24052),s=t(53355),l=t(88197),d=t(21758),u=t(65422),m=t(55486),p=t(17634),f=t(54888);let g=r.createContext(null);function h(){let n=r.useContext(g);if(!n)throw Error("useSidebar must be used within a SidebarProvider.");return n}let b=r.forwardRef((n,e)=>{let{defaultOpen:t=!0,open:i,onOpenChange:o,className:c,style:l,children:d,...u}=n,m=function(){let[n,e]=r.useState(void 0);return r.useEffect(()=>{let n=window.matchMedia("(max-width: ".concat(767,"px)")),t=()=>{e(window.innerWidth<768)};return n.addEventListener("change",t),e(window.innerWidth<768),()=>n.removeEventListener("change",t)},[]),!!n}(),[p,h]=r.useState(!1),[b,_]=r.useState(t),E=null!=i?i:b,v=r.useCallback(n=>{let e="function"==typeof n?n(E):n;o?o(e):_(e),document.cookie="".concat("sidebar:state","=").concat(e,"; path=/; max-age=").concat(604800)},[o,E]),y=r.useCallback(()=>m?h(n=>!n):v(n=>!n),[m,v,h]),x=E?"expanded":"collapsed",N=r.useMemo(()=>({state:x,open:E,setOpen:v,isMobile:m,openMobile:p,setOpenMobile:h,toggleSidebar:y}),[x,E,v,m,p,h,y]);return(0,a.jsx)(g.Provider,{value:N,children:(0,a.jsx)(f.pn,{delayDuration:0,children:(0,a.jsx)("div",{style:{"--sidebar-width":"13rem","--sidebar-width-icon":"3rem",...l},className:(0,s.cn)("group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",c),ref:e,...u,children:d})})})});b.displayName="SidebarProvider";let _=r.forwardRef((n,e)=>{let{overflowing:t=!1,side:r="left",variant:i="sidebar",collapsible:o="offcanvas",className:c,children:l,...d}=n,{isMobile:u,state:p,openMobile:f,setOpenMobile:g}=h();return"none"===o?(0,a.jsx)("div",{className:(0,s.cn)("flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",c),ref:e,...d,children:l}):u?(0,a.jsx)(m.yo,{open:f,onOpenChange:g,...d,children:(0,a.jsx)(m.ue,{"data-sidebar":"sidebar","data-mobile":"true",className:"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden",style:{"--sidebar-width":"18rem"},side:r,children:(0,a.jsx)("div",{className:"flex h-full w-full flex-col",children:l})})}):(0,a.jsxs)("div",{ref:e,className:(0,s.cn)(t?"w-12":"","relative group peer hidden md:block text-sidebar-foreground","flex-shrink-0"),"data-state":p,"data-collapsible":"collapsed"===p?o:"","data-variant":i,"data-side":r,children:[(0,a.jsx)("div",{className:(0,s.cn)(t?"absolute top-0":"relative","duration-100 h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear","group-data-[collapsible=offcanvas]:w-0","group-data-[side=right]:rotate-180","floating"===i||"inset"===i?"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]":"group-data-[collapsible=icon]:w-[--sidebar-width-icon]")}),(0,a.jsx)("div",{className:(0,s.cn)("absolute top-0 h-full","duration-100 inset-y-0 z-10 hidden w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex","left"===r?"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]":"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]","floating"===i||"inset"===i?"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]":"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",c),...d,children:(0,a.jsx)("div",{"data-sidebar":"sidebar",className:"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow",children:l})})]})});_.displayName="Sidebar",r.forwardRef((n,e)=>{let{className:t,onClick:r,...i}=n,{toggleSidebar:o}=h();return(0,a.jsxs)(l.z,{ref:e,"data-sidebar":"trigger",variant:"ghost",size:"icon",className:(0,s.cn)("h-7 w-7",t),onClick:n=>{null==r||r(n),o()},...i,children:[(0,a.jsx)(c.Z,{}),(0,a.jsx)("span",{className:"sr-only",children:"Toggle Sidebar"})]})}).displayName="SidebarTrigger",r.forwardRef((n,e)=>{let{className:t,...r}=n,{toggleSidebar:i}=h();return(0,a.jsx)("button",{ref:e,"data-sidebar":"rail","aria-label":"Toggle Sidebar",tabIndex:-1,onClick:i,title:"Toggle Sidebar",className:(0,s.cn)("absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex","[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize","[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize","group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar","[[data-side=left][data-collapsible=offcanvas]_&]:-right-2","[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",t),...r})}).displayName="SidebarRail",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("main",{ref:e,className:(0,s.cn)("relative flex min-h-svh flex-1 flex-col bg-background","peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",t),...r})}).displayName="SidebarInset",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(d.I,{ref:e,"data-sidebar":"input",className:(0,s.cn)("h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",t),...r})}).displayName="SidebarInput",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"header",className:(0,s.cn)("flex flex-col gap-2 p-2",t),...r})}).displayName="SidebarHeader";let E=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"footer",className:(0,s.cn)("flex flex-col gap-2 p-2",t),...r})});E.displayName="SidebarFooter",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(u.Z,{ref:e,"data-sidebar":"separator",className:(0,s.cn)("mx-2 w-auto bg-sidebar-border",t),...r})}).displayName="SidebarSeparator";let v=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"content",className:(0,s.cn)("flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",t),...r})});v.displayName="SidebarContent";let y=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"group",className:(0,s.cn)("relative flex w-full min-w-0 flex-col p-2",t),...r})});y.displayName="SidebarGroup",r.forwardRef((n,e)=>{let{className:t,asChild:r=!1,...o}=n,c=r?i.g7:"div";return(0,a.jsx)(c,{ref:e,"data-sidebar":"group-label",className:(0,s.cn)("duration-100 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-5 [&>svg]:shrink-0","group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",t),...o})}).displayName="SidebarGroupLabel",r.forwardRef((n,e)=>{let{className:t,asChild:r=!1,...o}=n,c=r?i.g7:"button";return(0,a.jsx)(c,{ref:e,"data-sidebar":"group-action",className:(0,s.cn)("absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-5 [&>svg]:shrink-0","after:absolute after:-inset-2 after:md:hidden","group-data-[collapsible=icon]:hidden",t),...o})}).displayName="SidebarGroupAction",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"group-content",className:(0,s.cn)("w-full text-sm",t),...r})}).displayName="SidebarGroupContent";let x=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("ul",{ref:e,"data-sidebar":"menu",className:(0,s.cn)("flex w-full min-w-0 flex-col gap-1",t),...r})});x.displayName="SidebarMenu";let N=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("li",{ref:e,"data-sidebar":"menu-item",className:(0,s.cn)("group/menu-item relative",t),...r})});N.displayName="SidebarMenuItem";let A=(0,o.j)((0,s.cn)("peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md py-2 px-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground [&>span:last-child]:truncate [&>svg]:size-5 [&>svg]:shrink-0 text-foreground-lighter data-[active=true]:text-foreground"),{variants:{variant:{default:"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",outline:"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]"},size:{default:"h-8 text-sm",sm:"h-7 text-xs",lg:"h-12 text-sm group-data-[collapsible=icon]:!p-0"},hasIcon:{true:"group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!pl-1.5 group-data-[collapsible=icon]:!pr-2",false:""}},defaultVariants:{variant:"default",size:"default",hasIcon:!0}}),z=r.forwardRef((n,e)=>{let{asChild:t=!1,isActive:r=!1,variant:o="default",size:c="default",hasIcon:l=!0,tooltip:d,className:u,...m}=n,p=t?i.g7:"button",{isMobile:g,state:b}=h(),_=(0,a.jsx)(p,{ref:e,"data-sidebar":"menu-button","data-size":c,"data-active":r,"data-has-icon":l,className:(0,s.cn)(A({variant:o,size:c,hasIcon:l}),u),...m});return d?("string"==typeof d&&(d={children:d}),(0,a.jsxs)(f.u,{children:[(0,a.jsx)(f.aJ,{asChild:!0,children:_}),(0,a.jsx)(f._v,{side:"right",align:"center",hidden:"collapsed"!==b||g,...d})]})):_});z.displayName="SidebarMenuButton",r.forwardRef((n,e)=>{let{className:t,asChild:r=!1,showOnHover:o=!1,...c}=n,l=r?i.g7:"button";return(0,a.jsx)(l,{ref:e,"data-sidebar":"menu-action",className:(0,s.cn)("absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-5 [&>svg]:shrink-0","after:absolute after:-inset-2 after:md:hidden","peer-data-[size=sm]/menu-button:top-1","peer-data-[size=default]/menu-button:top-1.5","peer-data-[size=lg]/menu-button:top-2.5","group-data-[collapsible=icon]:hidden",o&&"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",t),...c})}).displayName="SidebarMenuAction",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("div",{ref:e,"data-sidebar":"menu-badge",className:(0,s.cn)("absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none","peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground","peer-data-[size=sm]/menu-button:top-1","peer-data-[size=default]/menu-button:top-1.5","peer-data-[size=lg]/menu-button:top-2.5","group-data-[collapsible=icon]:hidden",t),...r})}).displayName="SidebarMenuBadge",r.forwardRef((n,e)=>{let{className:t,showIcon:i=!1,...o}=n,c=r.useMemo(()=>"".concat(Math.floor(40*Math.random())+50,"%"),[]);return(0,a.jsxs)("div",{ref:e,"data-sidebar":"menu-skeleton",className:(0,s.cn)("rounded-md h-8 flex gap-2 px-2 items-center",t),...o,children:[i&&(0,a.jsx)(p.O,{className:"size-4 rounded-md","data-sidebar":"menu-skeleton-icon"}),(0,a.jsx)(p.O,{className:"h-4 flex-1 max-w-[--skeleton-width]","data-sidebar":"menu-skeleton-text",style:{"--skeleton-width":c}})]})}).displayName="SidebarMenuSkeleton",r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)("ul",{ref:e,"data-sidebar":"menu-sub",className:(0,s.cn)("mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5","group-data-[collapsible=icon]:hidden",t),...r})}).displayName="SidebarMenuSub",r.forwardRef((n,e)=>{let{...t}=n;return(0,a.jsx)("li",{ref:e,...t})}).displayName="SidebarMenuSubItem",r.forwardRef((n,e)=>{let{asChild:t=!1,size:r="md",isActive:o,className:c,...l}=n,d=t?i.g7:"a";return(0,a.jsx)(d,{ref:e,"data-sidebar":"menu-sub-button","data-size":r,"data-active":o,className:(0,s.cn)("flex h-6 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-5 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground","data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground","sm"===r&&"text-xs","md"===r&&"text-sm","group-data-[collapsible=icon]:hidden",c),...l})}).displayName="SidebarMenuSubButton"},76125:function(n,e,t){t.d(e,{Z:function(){return nP}});var a={};t.r(a),t.d(a,{create:function(){return C},list:function(){return T},remove:function(){return L},retrieve:function(){return j},update:function(){return D}});var r={};t.r(r),t.d(r,{create:function(){return W},list:function(){return $},pgFunctionArrayZod:function(){return M},pgFunctionCreateZod:function(){return H},pgFunctionDeleteZod:function(){return Y},pgFunctionOptionalZod:function(){return F},pgFunctionUpdateZod:function(){return B},pgFunctionZod:function(){return U},remove:function(){return J},retrieve:function(){return q},update:function(){return G}});var i=t(79755);let o='\n-- Can\'t use pg_authid here since some managed Postgres providers don\'t expose it\n-- https://github.com/supabase/postgres-meta/issues/212\n\nselect\n  r.oid as id,\n  rolname as name,\n  rolsuper as "isSuperuser",\n  rolcreatedb as "canCreateDb",\n  rolcreaterole as "canCreateRole",\n  rolinherit as "inheritRole",\n  rolcanlogin as "canLogin",\n  rolreplication as "isReplicationRole",\n  rolbypassrls as "canBypassRls",\n  (\n    select\n      count(*)\n    from\n      pg_stat_activity\n    where\n      r.rolname = pg_stat_activity.usename\n  ) as "activeConnections",\n  case when rolconnlimit = -1 then current_setting(\'max_connections\') :: int8\n       else rolconnlimit\n  end as "connectionLimit",\n  rolvaliduntil as "validUntil",\n  coalesce(r_config.role_configs, \'{}\') as config\nfrom\n  pg_roles r\n  left join (\n    select\n      oid,\n      jsonb_object_agg(param, value) filter (where param is not null) as role_configs\n    from\n      (\n        select\n          oid,\n          (string_to_array(unnest(rolconfig), \'=\'))[1] as param,\n          (string_to_array(unnest(rolconfig), \'=\'))[2] as value\n        from\n          pg_roles\n      ) as _\n    group by\n      oid\n  ) r_config on r_config.oid = r.oid\n';var c=t(5394);let s=c.z.object({id:c.z.number(),name:c.z.string(),isSuperuser:c.z.boolean(),canCreateDb:c.z.boolean(),canCreateRole:c.z.boolean(),inheritRole:c.z.boolean(),canLogin:c.z.boolean(),isReplicationRole:c.z.boolean(),canBypassRls:c.z.boolean(),activeConnections:c.z.number(),connectionLimit:c.z.number(),validUntil:c.z.union([c.z.string(),c.z.null()]),config:c.z.record(c.z.string(),c.z.string())}),l=c.z.array(s),d=c.z.optional(s);function u(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name));throw Error("Must provide either id or name")}let m=["information_schema","pg_catalog","pg_toast"],p=(n,e)=>"\nCOALESCE(\n  (\n    SELECT\n      array_agg(row_to_json(".concat(n,")) FILTER (WHERE ").concat(e,")\n    FROM\n      ").concat(n,"\n  ),\n  '{}'\n) AS ").concat(n);function f(n,e,t){return(t&&(e=t.concat(null!=e?e:[])),null==n?void 0:n.length)?"IN (".concat(n.map(i.i0).join(","),")"):(null==e?void 0:e.length)?"NOT IN (".concat(e.map(i.i0).join(","),")"):""}function g(n,e){return"raise exception 'Cannot find ".concat(n," with: %', ").concat((0,i.i0)(e),";")}let h="\n-- Adapted from information_schema.columns\n\nSELECT\n  c.oid :: int8 AS table_id,\n  nc.nspname AS schema,\n  c.relname AS table,\n  (c.oid || '.' || a.attnum) AS id,\n  a.attnum AS ordinal_position,\n  a.attname AS name,\n  CASE\n    WHEN a.atthasdef THEN pg_get_expr(ad.adbin, ad.adrelid)\n    ELSE NULL\n  END AS default_value,\n  CASE\n    WHEN t.typtype = 'd' THEN CASE\n      WHEN bt.typelem <> 0 :: oid\n      AND bt.typlen = -1 THEN 'ARRAY'\n      WHEN nbt.nspname = 'pg_catalog' THEN format_type(t.typbasetype, NULL)\n      ELSE 'USER-DEFINED'\n    END\n    ELSE CASE\n      WHEN t.typelem <> 0 :: oid\n      AND t.typlen = -1 THEN 'ARRAY'\n      WHEN nt.nspname = 'pg_catalog' THEN format_type(a.atttypid, NULL)\n      ELSE 'USER-DEFINED'\n    END\n  END AS data_type,\n  COALESCE(bt.typname, t.typname) AS format,\n  a.attidentity IN ('a', 'd') AS is_identity,\n  CASE\n    a.attidentity\n    WHEN 'a' THEN 'ALWAYS'\n    WHEN 'd' THEN 'BY DEFAULT'\n    ELSE NULL\n  END AS identity_generation,\n  a.attgenerated IN ('s') AS is_generated,\n  NOT (\n    a.attnotnull\n    OR t.typtype = 'd' AND t.typnotnull\n  ) AS is_nullable,\n  (\n    c.relkind IN ('r', 'p')\n    OR c.relkind IN ('v', 'f') AND pg_column_is_updatable(c.oid, a.attnum, FALSE)\n  ) AS is_updatable,\n  uniques.table_id IS NOT NULL AS is_unique,\n  check_constraints.definition AS \"check\",\n  array_to_json(\n    array(\n      SELECT\n        enumlabel\n      FROM\n        pg_catalog.pg_enum enums\n      WHERE\n        enums.enumtypid = coalesce(bt.oid, t.oid)\n        OR enums.enumtypid = coalesce(bt.typelem, t.typelem)\n      ORDER BY\n        enums.enumsortorder\n    )\n  ) AS enums,\n  col_description(c.oid, a.attnum) AS comment\nFROM\n  pg_attribute a\n  LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid\n  AND a.attnum = ad.adnum\n  JOIN (\n    pg_class c\n    JOIN pg_namespace nc ON c.relnamespace = nc.oid\n  ) ON a.attrelid = c.oid\n  JOIN (\n    pg_type t\n    JOIN pg_namespace nt ON t.typnamespace = nt.oid\n  ) ON a.atttypid = t.oid\n  LEFT JOIN (\n    pg_type bt\n    JOIN pg_namespace nbt ON bt.typnamespace = nbt.oid\n  ) ON t.typtype = 'd'\n  AND t.typbasetype = bt.oid\n  LEFT JOIN (\n    SELECT DISTINCT ON (table_id, ordinal_position)\n      conrelid AS table_id,\n      conkey[1] AS ordinal_position\n    FROM pg_catalog.pg_constraint\n    WHERE contype = 'u' AND cardinality(conkey) = 1\n  ) AS uniques ON uniques.table_id = c.oid AND uniques.ordinal_position = a.attnum\n  LEFT JOIN (\n    -- We only select the first column check\n    SELECT DISTINCT ON (table_id, ordinal_position)\n      conrelid AS table_id,\n      conkey[1] AS ordinal_position,\n      substring(\n        pg_get_constraintdef(pg_constraint.oid, true),\n        8,\n        length(pg_get_constraintdef(pg_constraint.oid, true)) - 8\n      ) AS \"definition\"\n    FROM pg_constraint\n    WHERE contype = 'c' AND cardinality(conkey) = 1\n    ORDER BY table_id, ordinal_position, oid asc\n  ) AS check_constraints ON check_constraints.table_id = c.oid AND check_constraints.ordinal_position = a.attnum\nWHERE\n  NOT pg_is_other_temp_schema(nc.oid)\n  AND a.attnum > 0\n  AND NOT a.attisdropped\n  AND (c.relkind IN ('r', 'v', 'm', 'f', 'p'))\n  AND (\n    pg_has_role(c.relowner, 'USAGE')\n    OR has_column_privilege(\n      c.oid,\n      a.attnum,\n      'SELECT, INSERT, UPDATE, REFERENCES'\n    )\n  )\n",b=c.z.object({id:c.z.string(),table_id:c.z.number(),schema:c.z.string(),table:c.z.string(),name:c.z.string(),ordinal_position:c.z.number(),data_type:c.z.string(),format:c.z.string(),is_identity:c.z.boolean(),identity_generation:c.z.string().nullable(),is_generated:c.z.boolean(),is_nullable:c.z.boolean(),is_updatable:c.z.boolean(),is_unique:c.z.boolean(),check:c.z.string().nullable(),default_value:c.z.any().nullable(),enums:c.z.array(c.z.string()),comment:c.z.string().nullable()}),_=c.z.array(b),E=c.z.optional(b);function v(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema&&n.table)return"schema = ".concat((0,i.i0)(n.schema)," AND ").concat((0,i.yR)("table")," = ").concat((0,i.i0)(n.table)," AND name = ").concat((0,i.i0)(n.name));throw Error("Must provide either id or schema, name and table")}let y="\n-- Adapted from information_schema.schemata\n\nselect\n  n.oid as id,\n  n.nspname as name,\n  u.rolname as owner\nfrom\n  pg_namespace n,\n  pg_roles u\nwhere\n  n.nspowner = u.oid\n  and (\n    pg_has_role(n.nspowner, 'USAGE')\n    or has_schema_privilege(n.oid, 'CREATE, USAGE')\n  )\n  and not pg_catalog.starts_with(n.nspname, 'pg_temp_')\n  and not pg_catalog.starts_with(n.nspname, 'pg_toast_temp_')\n",x=c.z.object({id:c.z.number(),name:c.z.string(),owner:c.z.string()}),N=c.z.array(x),A=c.z.optional(x),z=c.z.object({table_id:c.z.number(),name:c.z.string(),schema:c.z.string(),table_name:c.z.string()}),w=c.z.object({id:c.z.number(),constraint_name:c.z.string(),source_schema:c.z.string(),source_table_name:c.z.string(),source_column_name:c.z.string(),target_table_schema:c.z.string(),target_table_name:c.z.string(),target_column_name:c.z.string()}),S=c.z.object({id:c.z.number(),schema:c.z.string(),name:c.z.string(),rls_enabled:c.z.boolean(),rls_forced:c.z.boolean(),replica_identity:c.z.enum(["DEFAULT","INDEX","FULL","NOTHING"]),bytes:c.z.number(),size:c.z.string(),live_rows_estimate:c.z.number(),dead_rows_estimate:c.z.number(),comment:c.z.string().nullable(),primary_keys:c.z.array(z),relationships:c.z.array(w),columns:_.optional()}),R=c.z.array(S);function I(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name)," and ").concat((0,i.yR)("schema")," = ").concat((0,i.i0)(n.schema));throw Error("Must provide either id or name and schema")}function T(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r,includeColumns:i=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=O({includeColumns:i}),c=f(e,t,n?void 0:m);return c&&(o+=" where schema ".concat(c)),a&&(o+=" limit ".concat(a)),r&&(o+=" offset ".concat(r)),{sql:o,zod:R}}function j(n){let e=I(n);return{sql:"".concat(O({includeColumns:!0})," where ").concat(e,";"),zod:S.optional()}}function L(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{cascade:!1},t=I(n);return{sql:"\n    do $$\n    declare\n        old record;\n    begin\n        with tables as (".concat(O({includeColumns:!1}),")\n        select * into old from tables where ").concat(t,";\n        if old is null then\n           ").concat(g("table",t),"\n        end if;\n        execute format('drop table %I.%I ").concat(e.cascade?"cascade":"restrict","', old.schema, old.name);\n    end\n    $$;\n    ")}}let O=n=>{let{includeColumns:e}=n;return"\n  with tables as (".concat("\nSELECT\n  c.oid :: int8 AS id,\n  nc.nspname AS schema,\n  c.relname AS name,\n  c.relrowsecurity AS rls_enabled,\n  c.relforcerowsecurity AS rls_forced,\n  CASE\n    WHEN c.relreplident = 'd' THEN 'DEFAULT'\n    WHEN c.relreplident = 'i' THEN 'INDEX'\n    WHEN c.relreplident = 'f' THEN 'FULL'\n    ELSE 'NOTHING'\n  END AS replica_identity,\n  pg_total_relation_size(format('%I.%I', nc.nspname, c.relname)) :: int8 AS bytes,\n  pg_size_pretty(\n    pg_total_relation_size(format('%I.%I', nc.nspname, c.relname))\n  ) AS size,\n  pg_stat_get_live_tuples(c.oid) AS live_rows_estimate,\n  pg_stat_get_dead_tuples(c.oid) AS dead_rows_estimate,\n  obj_description(c.oid) AS comment,\n  coalesce(pk.primary_keys, '[]') as primary_keys,\n  coalesce(\n    jsonb_agg(relationships) filter (where relationships is not null),\n    '[]'\n  ) as relationships\nFROM\n  pg_namespace nc\n  JOIN pg_class c ON nc.oid = c.relnamespace\n  left join (\n    select\n      table_id,\n      jsonb_agg(_pk.*) as primary_keys\n    from (\n      select\n        n.nspname as schema,\n        c.relname as table_name,\n        a.attname as name,\n        c.oid :: int8 as table_id\n      from\n        pg_index i,\n        pg_class c,\n        pg_attribute a,\n        pg_namespace n\n      where\n        i.indrelid = c.oid\n        and c.relnamespace = n.oid\n        and a.attrelid = c.oid\n        and a.attnum = any (i.indkey)\n        and i.indisprimary\n    ) as _pk\n    group by table_id\n  ) as pk\n  on pk.table_id = c.oid\n  left join (\n    select\n      c.oid :: int8 as id,\n      c.conname as constraint_name,\n      nsa.nspname as source_schema,\n      csa.relname as source_table_name,\n      sa.attname as source_column_name,\n      nta.nspname as target_table_schema,\n      cta.relname as target_table_name,\n      ta.attname as target_column_name\n    from\n      pg_constraint c\n    join (\n      pg_attribute sa\n      join pg_class csa on sa.attrelid = csa.oid\n      join pg_namespace nsa on csa.relnamespace = nsa.oid\n    ) on sa.attrelid = c.conrelid and sa.attnum = any (c.conkey)\n    join (\n      pg_attribute ta\n      join pg_class cta on ta.attrelid = cta.oid\n      join pg_namespace nta on cta.relnamespace = nta.oid\n    ) on ta.attrelid = c.confrelid and ta.attnum = any (c.confkey)\n    where\n      c.contype = 'f'\n  ) as relationships\n  on (relationships.source_schema = nc.nspname and relationships.source_table_name = c.relname)\n  or (relationships.target_table_schema = nc.nspname and relationships.target_table_name = c.relname)\nWHERE\n  c.relkind IN ('r', 'p')\n  AND NOT pg_is_other_temp_schema(nc.oid)\n  AND (\n    pg_has_role(c.relowner, 'USAGE')\n    OR has_table_privilege(\n      c.oid,\n      'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'\n    )\n    OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES')\n  )\ngroup by\n  c.oid,\n  c.relname,\n  c.relrowsecurity,\n  c.relforcerowsecurity,\n  c.relreplident,\n  nc.nspname,\n  pk.primary_keys\n",")\n  ").concat(e?", columns as (".concat(h,")"):"","\n  select\n    *\n    ").concat(e?", ".concat(p("columns","columns.table_id = tables.id")):"","\n  from tables")};function C(n){let{name:e,schema:t="public",comment:a}=n;return{sql:"\ndo $$\nbegin\n  execute format('create table %I.%I ()', ".concat((0,i.i0)(t),", ").concat((0,i.i0)(e),");\n  ").concat(void 0===a?"":"\n  execute format('comment on table %I.%I is %L', ".concat((0,i.i0)(t),", ").concat((0,i.i0)(e),", ").concat((0,i.i0)(a),");"),"\nend\n$$;")}}function D(n,e){let{name:t,schema:a,rls_enabled:r,rls_forced:o,replica_identity:c,replica_identity_index:s,primary_keys:l,comment:d}=e;return{sql:"\nDO $$\nDECLARE\n  v_table record;\n  r record;\nBEGIN\n  WITH tables AS (\n    ".concat(O({includeColumns:!1}),"\n  )\n  SELECT *\n  INTO v_table\n  FROM tables\n  WHERE ").concat(I(n),";\n\n  IF v_table IS NULL THEN\n    ").concat(g("table",I(n)),"\n  END IF;\n\n  ").concat(void 0!==r?"execute format('ALTER TABLE %I.%I %s ROW LEVEL SECURITY',\n          v_table.schema, v_table.name,\n          CASE WHEN ".concat((0,i.i0)(r)," THEN 'ENABLE' ELSE 'DISABLE' END);"):"","\n\n  ").concat(void 0!==o?"execute format('ALTER TABLE %I.%I %s FORCE ROW LEVEL SECURITY',\n          v_table.schema, v_table.name,\n          CASE WHEN ".concat((0,i.i0)(o)," THEN '' ELSE 'NO' END);"):"","\n\n  ").concat(void 0!==c?"execute format('ALTER TABLE %I.%I REPLICA IDENTITY %s%s',\n          v_table.schema, v_table.name,\n          ".concat((0,i.i0)(c),",\n          CASE WHEN ").concat((0,i.i0)(c)," = 'INDEX' \n            THEN format(' USING INDEX %I', ").concat((0,i.i0)(s),")\n            ELSE '' END);"):"","\n\n  ").concat(void 0!==l?"\n    -- Drop existing primary key if any\n    FOR r IN (\n      SELECT conname\n      FROM pg_constraint\n      WHERE conrelid = format('%I.%I', v_table.schema, v_table.name)::regclass\n      AND contype = 'p'\n    ) LOOP\n      execute format('ALTER TABLE %I.%I DROP CONSTRAINT %I',\n        v_table.schema, v_table.name, r.conname);\n    END LOOP;\n\n    ".concat(l.length>0?"execute format('ALTER TABLE %I.%I ADD PRIMARY KEY (%s)',\n            v_table.schema, v_table.name,\n            ".concat((0,i.i0)(l.map(n=>n.name).join(", ")),");"):""):"","\n\n  ").concat(void 0!==d?"execute format('COMMENT ON TABLE %I.%I IS %L',\n          v_table.schema, v_table.name,\n          ".concat((0,i.i0)(d),");"):"","\n\n  ").concat(void 0!==a?"execute format('ALTER TABLE %I.%I SET SCHEMA %I',\n          v_table.schema, v_table.name,\n          ".concat((0,i.i0)(a),");"):"","\n\n  ").concat(void 0!==t?"\n      if ".concat((0,i.i0)(t)," != v_table.name then\n        execute format('ALTER TABLE %I.%I RENAME TO %I',\n            ").concat(void 0!==a?(0,i.i0)(a):"v_table.schema",",\n            v_table.name,\n            ").concat((0,i.i0)(t),");\n      end if;"):"","\nEND $$;")}}let k="\n-- CTE with sane arg_modes, arg_names, and arg_types.\n-- All three are always of the same length.\n-- All three include all args, including OUT and TABLE args.\nwith functions as (\n  select\n    *,\n    -- proargmodes is null when all arg modes are IN\n    coalesce(\n      p.proargmodes,\n      array_fill('i'::text, array[cardinality(coalesce(p.proallargtypes, p.proargtypes))])\n    ) as arg_modes,\n    -- proargnames is null when all args are unnamed\n    coalesce(\n      p.proargnames,\n      array_fill(''::text, array[cardinality(coalesce(p.proallargtypes, p.proargtypes))])\n    ) as arg_names,\n    -- proallargtypes is null when all arg modes are IN\n    coalesce(p.proallargtypes, p.proargtypes) as arg_types,\n    array_cat(\n      array_fill(false, array[pronargs - pronargdefaults]),\n      array_fill(true, array[pronargdefaults])) as arg_has_defaults\n  from\n    pg_proc as p\n  where\n    p.prokind = 'f'\n)\nselect\n  f.oid as id,\n  n.nspname as schema,\n  f.proname as name,\n  l.lanname as language,\n  case\n    when l.lanname = 'internal' then ''\n    else f.prosrc\n  end as definition,\n  case\n    when l.lanname = 'internal' then f.prosrc\n    else pg_get_functiondef(f.oid)\n  end as complete_statement,\n  coalesce(f_args.args, '[]') as args,\n  pg_get_function_arguments(f.oid) as argument_types,\n  pg_get_function_identity_arguments(f.oid) as identity_argument_types,\n  f.prorettype as return_type_id,\n  pg_get_function_result(f.oid) as return_type,\n  nullif(rt.typrelid, 0) as return_type_relation_id,\n  f.proretset as is_set_returning_function,\n  case\n    when f.provolatile = 'i' then 'IMMUTABLE'\n    when f.provolatile = 's' then 'STABLE'\n    when f.provolatile = 'v' then 'VOLATILE'\n  end as behavior,\n  f.prosecdef as security_definer,\n  f_config.config_params as config_params\nfrom\n  functions f\n  left join pg_namespace n on f.pronamespace = n.oid\n  left join pg_language l on f.prolang = l.oid\n  left join pg_type rt on rt.oid = f.prorettype\n  left join (\n    select\n      oid,\n      jsonb_object_agg(param, value) filter (where param is not null) as config_params\n    from\n      (\n        select\n          oid,\n          (string_to_array(unnest(proconfig), '='))[1] as param,\n          (string_to_array(unnest(proconfig), '='))[2] as value\n        from\n          functions\n      ) as t\n    group by\n      oid\n  ) f_config on f_config.oid = f.oid\n  left join (\n    select\n      oid,\n      jsonb_agg(jsonb_build_object(\n        'mode', t2.mode,\n        'name', name,\n        'type_id', type_id,\n        -- Cast null into false boolean\n        'has_default', COALESCE(has_default, false)\n      )) as args\n    from\n      (\n        select\n          oid,\n          unnest(arg_modes) as mode,\n          unnest(arg_names) as name,\n          -- Coming from: coalesce(p.proallargtypes, p.proargtypes) postgres won't automatically assume\n          -- integer, we need to cast it to be properly parsed\n          unnest(arg_types)::int8 as type_id,\n          unnest(arg_has_defaults) as has_default\n        from\n          functions\n      ) as t1,\n      lateral (\n        select\n          case\n            when t1.mode = 'i' then 'in'\n            when t1.mode = 'o' then 'out'\n            when t1.mode = 'b' then 'inout'\n            when t1.mode = 'v' then 'variadic'\n            else 'table'\n          end as mode\n      ) as t2\n    group by\n      t1.oid\n  ) f_args on f_args.oid = f.oid\n",U=c.z.object({id:c.z.number(),schema:c.z.string(),name:c.z.string(),language:c.z.string(),definition:c.z.string(),complete_statement:c.z.string(),args:c.z.array(c.z.object({mode:c.z.union([c.z.literal("in"),c.z.literal("out"),c.z.literal("inout"),c.z.literal("variadic"),c.z.literal("table")]),name:c.z.string(),type_id:c.z.number(),has_default:c.z.boolean()})),argument_types:c.z.string(),identity_argument_types:c.z.string(),return_type_id:c.z.number(),return_type:c.z.string(),return_type_relation_id:c.z.union([c.z.number(),c.z.null()]),is_set_returning_function:c.z.boolean(),behavior:c.z.union([c.z.literal("IMMUTABLE"),c.z.literal("STABLE"),c.z.literal("VOLATILE")]),security_definer:c.z.boolean(),config_params:c.z.union([c.z.record(c.z.string(),c.z.string()),c.z.null()])}),M=c.z.array(U),F=c.z.optional(U);function $(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i="\n    with f as (\n      ".concat(k,"\n    )\n    select\n      f.*\n    from f\n  "),o=f(e,t,n?void 0:m);return o&&(i+=" where schema ".concat(o)),a&&(i="".concat(i," limit ").concat(a)),r&&(i="".concat(i," offset ").concat(r)),{sql:i,zod:M}}function q(n){let{id:e,name:t,schema:a="public",args:r=[]}=n;if(e)return{sql:"\n      with f as (\n        ".concat(k,"\n      )\n      select\n        f.*\n      from f where id = ").concat((0,i.i0)(e),";"),zod:F};if(t&&a&&r)return{sql:"with f as (\n      ".concat(k,"\n    )\n    select\n      f.*\n    from f join pg_proc as p on id = p.oid where schema = ").concat((0,i.i0)(a)," and name = ").concat((0,i.i0)(t)," and p.proargtypes::text = ").concat(r.length?"(\n          select string_agg(type_oid::text, ' ') from (\n            select (\n              split_args.arr[\n                array_length(\n                  split_args.arr,\n                  1\n                )\n              ]::regtype::oid\n            ) as type_oid from (\n              select string_to_array(\n                unnest(\n                  array[".concat(r.map(i.i0),"]\n                ),\n                ' '\n              ) as arr\n            ) as split_args\n          ) args\n        )"):(0,i.i0)("")),zod:F};throw Error("Must provide either id or name and schema")}let H=c.z.object({name:c.z.string(),definition:c.z.string(),args:c.z.array(c.z.string()).optional(),behavior:c.z.enum(["IMMUTABLE","STABLE","VOLATILE"]).optional(),config_params:c.z.record(c.z.string(),c.z.string()).optional(),schema:c.z.string().optional(),language:c.z.string().optional(),return_type:c.z.string().optional(),security_definer:c.z.boolean().optional()});function P(n){let{name:e,schema:t,args:a,definition:r,return_type:o,language:c,behavior:s,security_definer:l,config_params:d}=n,{replace:u=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"\n    CREATE ".concat(u?"OR REPLACE":""," FUNCTION ").concat((0,i.yR)(t),".").concat((0,i.yR)(e),"(").concat((null==a?void 0:a.join(", "))||"",")\n    RETURNS ").concat(o,"\n    AS ").concat((0,i.i0)(r),"\n    LANGUAGE ").concat(c,"\n    ").concat(s,"\n    CALLED ON NULL INPUT\n    ").concat(l?"SECURITY DEFINER":"SECURITY INVOKER","\n    ").concat(d?Object.entries(d).map(n=>{let[e,t]=n;return"SET ".concat(e," ").concat("FROM CURRENT"===t?"FROM CURRENT":"TO "+('""'===t?"''":t))}).join("\n"):"",";\n  ")}function W(n){let{name:e,schema:t="public",args:a=[],definition:r,return_type:i="void",language:o="sql",behavior:s="VOLATILE",security_definer:l=!1,config_params:d={}}=n;return{sql:P({name:e,schema:t,args:a,definition:r,return_type:i,language:o,behavior:s,security_definer:l,config_params:d}),zod:c.z.void()}}let B=c.z.object({name:c.z.string().optional(),schema:c.z.string().optional(),definition:c.z.string().optional()});function G(n,e){var t;let{name:a,schema:r,definition:o}=e,s=n.argument_types.split(", "),l=n.identity_argument_types,d="string"==typeof o?P({...n,definition:o,args:s,config_params:null!==(t=n.config_params)&&void 0!==t?t:{}},{replace:!0}):"",u=a&&a!==n.name?"ALTER FUNCTION ".concat((0,i.yR)(n.schema),".").concat((0,i.yR)(n.name),"(").concat(l,") RENAME TO ").concat((0,i.yR)(a),";"):"",m=r&&r!==n.schema?"ALTER FUNCTION ".concat((0,i.yR)(n.schema),".").concat((0,i.yR)(a||n.name),"(").concat(l,")  SET SCHEMA ").concat((0,i.yR)(r),";"):"";return{sql:"\n    DO LANGUAGE plpgsql $$\n    BEGIN\n      IF ".concat("string"==typeof o?"TRUE":"FALSE"," THEN\n        ").concat(d,"\n\n        IF (\n          SELECT id\n          FROM (").concat(k,") AS f\n          WHERE f.schema = ").concat((0,i.i0)(n.schema),"\n          AND f.name = ").concat((0,i.i0)(n.name),"\n          AND f.identity_argument_types = ").concat((0,i.i0)(l),"\n        ) != ").concat(n.id," THEN\n          RAISE EXCEPTION 'Cannot find function \"").concat(n.schema,'"."').concat(n.name,'"(').concat(l,")';\n        END IF;\n      END IF;\n\n      ").concat(u,"\n\n      ").concat(m,"\n    END;\n    $$;\n  "),zod:c.z.void()}}let Y=c.z.object({cascade:c.z.boolean().default(!1).optional()});function J(n){let{cascade:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{sql:"DROP FUNCTION ".concat((0,i.yR)(n.schema),".").concat((0,i.yR)(n.name),"\n  (").concat(n.identity_argument_types,")\n  ").concat(e?"CASCADE":"RESTRICT",";"),zod:c.z.void()}}let V="\n-- Despite the name `table_privileges`, this includes other kinds of relations:\n-- views, matviews, etc. \"Relation privileges\" just doesn't roll off the tongue.\n--\n-- For each relation, get its relacl in a jsonb format,\n-- e.g.\n--\n-- '{postgres=arwdDxt/postgres}'\n--\n-- becomes\n--\n-- [\n--   {\n--     \"grantee\": \"postgres\",\n--     \"grantor\": \"postgres\",\n--     \"is_grantable\": false,\n--     \"privilege_type\": \"INSERT\"\n--   },\n--   ...\n-- ]\nselect\n  c.oid as relation_id,\n  nc.nspname as schema,\n  c.relname as name,\n  case\n    when c.relkind = 'r' then 'table'\n    when c.relkind = 'v' then 'view'\n    when c.relkind = 'm' then 'materialized_view'\n    when c.relkind = 'f' then 'foreign_table'\n    when c.relkind = 'p' then 'partitioned_table'\n  end as kind,\n  coalesce(\n    jsonb_agg(\n      jsonb_build_object(\n        'grantor', grantor.rolname,\n        'grantee', grantee.rolname,\n        'privilege_type', _priv.privilege_type,\n        'is_grantable', _priv.is_grantable\n      )\n    ) filter (where _priv is not null),\n    '[]'\n  ) as privileges\nfrom pg_class c\njoin pg_namespace as nc\n  on nc.oid = c.relnamespace\nleft join lateral (\n  select grantor, grantee, privilege_type, is_grantable\n  from aclexplode(coalesce(c.relacl, acldefault('r', c.relowner)))\n) as _priv on true\nleft join pg_roles as grantor\n  on grantor.oid = _priv.grantor\nleft join (\n  select\n    pg_roles.oid,\n    pg_roles.rolname\n  from pg_roles\n  union all\n  select\n    (0)::oid as oid, 'PUBLIC'\n) as grantee (oid, rolname)\n  on grantee.oid = _priv.grantee\nwhere c.relkind in ('r', 'v', 'm', 'f', 'p')\n  and not pg_is_other_temp_schema(c.relnamespace)\n  and (\n    pg_has_role(c.relowner, 'USAGE')\n    or has_table_privilege(\n      c.oid,\n      'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'\n      || case when current_setting('server_version_num')::int4 >= 170000 then ', MAINTAIN' else '' end\n    )\n    or has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES')\n  )\ngroup by\n  c.oid,\n  nc.nspname,\n  c.relname,\n  c.relkind\n",Z=c.z.object({relation_id:c.z.number(),schema:c.z.string(),name:c.z.string(),kind:c.z.union([c.z.literal("table"),c.z.literal("view"),c.z.literal("materialized_view"),c.z.literal("foreign_table"),c.z.literal("partitioned_table")]),privileges:c.z.array(c.z.object({grantor:c.z.string(),grantee:c.z.string(),privilege_type:c.z.union([c.z.literal("SELECT"),c.z.literal("INSERT"),c.z.literal("UPDATE"),c.z.literal("DELETE"),c.z.literal("TRUNCATE"),c.z.literal("REFERENCES"),c.z.literal("TRIGGER"),c.z.literal("MAINTAIN")]),is_grantable:c.z.boolean()}))}),Q=c.z.array(Z),X=c.z.optional(Z),K="\nSELECT\n  p.oid :: int8 AS id,\n  p.pubname AS name,\n  p.pubowner::regrole::text AS owner,\n  p.pubinsert AS publish_insert,\n  p.pubupdate AS publish_update,\n  p.pubdelete AS publish_delete,\n  p.pubtruncate AS publish_truncate,\n  CASE\n    WHEN p.puballtables THEN NULL\n    ELSE pr.tables\n  END AS tables\nFROM\n  pg_catalog.pg_publication AS p\n  LEFT JOIN LATERAL (\n    SELECT\n      COALESCE(\n        array_agg(\n          json_build_object(\n            'id',\n            c.oid :: int8,\n            'name',\n            c.relname,\n            'schema',\n            nc.nspname\n          )\n        ),\n        '{}'\n      ) AS tables\n    FROM\n      pg_catalog.pg_publication_rel AS pr\n      JOIN pg_class AS c ON pr.prrelid = c.oid\n      join pg_namespace as nc on c.relnamespace = nc.oid\n    WHERE\n      pr.prpubid = p.oid\n  ) AS pr ON 1 = 1\n",nn=c.z.object({id:c.z.number().optional(),name:c.z.string(),schema:c.z.string()}),ne=c.z.object({id:c.z.number(),name:c.z.string(),owner:c.z.string(),publish_insert:c.z.boolean(),publish_update:c.z.boolean(),publish_delete:c.z.boolean(),publish_truncate:c.z.boolean(),tables:c.z.array(nn).nullable()}),nt=c.z.array(ne),na=c.z.optional(ne);function nr(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name));throw Error("Must provide either id or name")}let ni="\nSELECT\n  e.name,\n  n.nspname AS schema,\n  e.default_version,\n  x.extversion AS installed_version,\n  e.comment\nFROM\n  pg_available_extensions() e(name, default_version, comment)\n  LEFT JOIN pg_extension x ON e.name = x.extname\n  LEFT JOIN pg_namespace n ON x.extnamespace = n.oid\n",no=c.z.object({name:c.z.string(),schema:c.z.string().nullable(),default_version:c.z.string(),installed_version:c.z.string().nullable(),comment:c.z.string()}),nc=c.z.array(no),ns=c.z.optional(no),nl=c.z.object({name:c.z.string(),setting:c.z.string(),category:c.z.string(),group:c.z.string(),subgroup:c.z.string(),unit:c.z.string().nullable(),short_desc:c.z.string(),extra_desc:c.z.string().nullable(),context:c.z.string(),vartype:c.z.string(),source:c.z.string(),min_val:c.z.string().nullable(),max_val:c.z.string().nullable(),enumvals:c.z.array(c.z.string()).nullable(),boot_val:c.z.string().nullable(),reset_val:c.z.string().nullable(),sourcefile:c.z.string().nullable(),sourceline:c.z.number().nullable(),pending_restart:c.z.boolean()}),nd=c.z.array(nl),nu=c.z.object({id:c.z.number(),schema:c.z.string(),name:c.z.string(),is_populated:c.z.boolean(),comment:c.z.string().nullable(),columns:_.optional()}),nm=c.z.array(nu),np=c.z.optional(nu),nf=n=>{let{includeColumns:e}=n;return"\nwith materialized_views as (".concat("\nselect\n  c.oid::int8 as id,\n  n.nspname as schema,\n  c.relname as name,\n  c.relispopulated as is_populated,\n  obj_description(c.oid) as comment\nfrom\n  pg_class c\n  join pg_namespace n on n.oid = c.relnamespace\nwhere\n  c.relkind = 'm'\n",")\n  ").concat(e?", columns as (".concat(h,")"):"","\nselect\n  *\n  ").concat(e?", ".concat(p("columns","columns.table_id = materialized_views.id")):"","\nfrom materialized_views")},ng=c.z.object({id:c.z.number(),schema:c.z.string(),name:c.z.string(),comment:c.z.string().nullable(),columns:_.optional()}),nh=c.z.array(ng),nb=c.z.optional(ng),n_=n=>{let{includeColumns:e}=n;return"\nwith foreign_tables as (".concat("\nselect\n  c.oid::int8 as id,\n  n.nspname as schema,\n  c.relname as name,\n  obj_description(c.oid) as comment\nfrom\n  pg_class c\n  join pg_namespace n on n.oid = c.relnamespace\nwhere\n  c.relkind = 'f'\n",")\n  ").concat(e?", columns as (".concat(h,")"):"","\nselect\n  *\n  ").concat(e?", ".concat(p("columns","columns.table_id = foreign_tables.id")):"","\nfrom foreign_tables")},nE=c.z.object({id:c.z.number(),schema:c.z.string(),name:c.z.string(),is_updatable:c.z.boolean(),comment:c.z.string().nullable(),columns:_.optional()}),nv=c.z.array(nE),ny=c.z.optional(nE),nx=n=>{let{includeColumns:e}=n;return"\nwith views as (".concat("\nSELECT\n  c.oid :: int8 AS id,\n  n.nspname AS schema,\n  c.relname AS name,\n  (pg_relation_is_updatable(c.oid, false) & 20) = 20 AS is_updatable,\n  obj_description(c.oid) AS comment\nFROM\n  pg_class c\n  JOIN pg_namespace n ON n.oid = c.relnamespace\nWHERE\n  c.relkind = 'v'\n",")\n  ").concat(e?", columns as (".concat(h,")"):"","\nselect\n  *\n  ").concat(e?", ".concat(p("columns","columns.table_id = views.id")):"","\nfrom views")},nN="\nselect\n  pol.oid :: int8 as id,\n  n.nspname as schema,\n  c.relname as table,\n  c.oid :: int8 as table_id,\n  pol.polname as name,\n  case\n    when pol.polpermissive then 'PERMISSIVE'::text\n    else 'RESTRICTIVE'::text\n  end as action,\n  case\n    when pol.polroles = '{0}'::oid[] then array_to_json(string_to_array('public'::text, ''::text)::name[])\n    else array_to_json(array(\n      select pg_roles.rolname\n      from pg_roles\n      where pg_roles.oid = any(pol.polroles)\n      order by pg_roles.rolname\n    ))\n  end as roles,\n  case pol.polcmd\n    when 'r'::\"char\" then 'SELECT'::text\n    when 'a'::\"char\" then 'INSERT'::text\n    when 'w'::\"char\" then 'UPDATE'::text\n    when 'd'::\"char\" then 'DELETE'::text\n    when '*'::\"char\" then 'ALL'::text\n    else null::text\n  end as command,\n  pg_get_expr(pol.polqual, pol.polrelid) as definition,\n  pg_get_expr(pol.polwithcheck, pol.polrelid) as check\nfrom\n  pg_policy pol\n  join pg_class c on c.oid = pol.polrelid\n  left join pg_namespace n on n.oid = c.relnamespace\n",nA=c.z.object({id:c.z.number(),schema:c.z.string(),table:c.z.string(),table_id:c.z.number(),name:c.z.string(),action:c.z.union([c.z.literal("PERMISSIVE"),c.z.literal("RESTRICTIVE")]),roles:c.z.array(c.z.string()),command:c.z.union([c.z.literal("SELECT"),c.z.literal("INSERT"),c.z.literal("UPDATE"),c.z.literal("DELETE"),c.z.literal("ALL")]),definition:c.z.union([c.z.string(),c.z.null()]),check:c.z.union([c.z.string(),c.z.null()])}),nz=c.z.array(nA),nw=c.z.optional(nA);function nS(n){if("id"in n&&n.id)return"id = ".concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema&&n.table)return"name = ".concat((0,i.i0)(n.name)," AND schema = ").concat((0,i.i0)(n.schema)," AND table = ").concat((0,i.i0)(n.table));throw Error("Must provide either id or name, schema and table")}let nR="\nSELECT\n  pg_t.oid AS id,\n  pg_t.tgrelid AS table_id,\n  CASE\n    WHEN pg_t.tgenabled = 'D' THEN 'DISABLED'\n    WHEN pg_t.tgenabled = 'O' THEN 'ORIGIN'\n    WHEN pg_t.tgenabled = 'R' THEN 'REPLICA'\n    WHEN pg_t.tgenabled = 'A' THEN 'ALWAYS'\n  END AS enabled_mode,\n  (\n    STRING_TO_ARRAY(\n      ENCODE(pg_t.tgargs, 'escape'), '\\000'\n    )\n  )[:pg_t.tgnargs] AS function_args,\n  is_t.trigger_name AS name,\n  is_t.event_object_table AS table,\n  is_t.event_object_schema AS schema,\n  is_t.action_condition AS condition,\n  is_t.action_orientation AS orientation,\n  is_t.action_timing AS activation,\n  ARRAY_AGG(is_t.event_manipulation)::text[] AS events,\n  pg_p.proname AS function_name,\n  pg_n.nspname AS function_schema\nFROM\n  pg_trigger AS pg_t\nJOIN\n  pg_class AS pg_c\nON pg_t.tgrelid = pg_c.oid\nJOIN information_schema.triggers AS is_t\nON is_t.trigger_name = pg_t.tgname\nAND pg_c.relname = is_t.event_object_table\nAND pg_c.relnamespace = (quote_ident(is_t.event_object_schema))::regnamespace\nJOIN pg_proc AS pg_p\nON pg_t.tgfoid = pg_p.oid\nJOIN pg_namespace AS pg_n\nON pg_p.pronamespace = pg_n.oid\nGROUP BY\n  pg_t.oid,\n  pg_t.tgrelid,\n  pg_t.tgenabled,\n  pg_t.tgargs,\n  pg_t.tgnargs,\n  is_t.trigger_name,\n  is_t.event_object_table,\n  is_t.event_object_schema,\n  is_t.action_condition,\n  is_t.action_orientation,\n  is_t.action_timing,\n  pg_p.proname,\n  pg_n.nspname\n";function nI(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.table&&n.schema)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name)," and ").concat((0,i.yR)("schema")," = ").concat((0,i.i0)(n.schema)," and ").concat((0,i.yR)("table")," = ").concat((0,i.i0)(n.table));throw Error("Must provide either id or name, schema and table")}let nT=c.z.object({id:c.z.number(),table_id:c.z.number(),enabled_mode:c.z.enum(["DISABLED","ORIGIN","REPLICA","ALWAYS"]),function_args:c.z.array(c.z.string()),name:c.z.string(),table:c.z.string(),schema:c.z.string(),condition:c.z.string().nullable(),orientation:c.z.string(),activation:c.z.string(),events:c.z.array(c.z.string()),function_name:c.z.string(),function_schema:c.z.string()}),nj=c.z.array(nT),nL=c.z.optional(nT);c.z.object({name:c.z.string(),schema:c.z.string().optional().default("public"),table:c.z.string(),function_schema:c.z.string().optional().default("public"),function_name:c.z.string(),function_args:c.z.array(c.z.string()).optional(),activation:c.z.enum(["BEFORE","AFTER","INSTEAD OF"]),events:c.z.array(c.z.string()),orientation:c.z.enum(["ROW","STATEMENT"]).optional(),condition:c.z.string().optional()}),c.z.object({name:c.z.string().optional(),enabled_mode:c.z.enum(["ORIGIN","REPLICA","ALWAYS","DISABLED"]).optional()});let nO=c.z.object({id:c.z.number(),name:c.z.string(),schema:c.z.string(),format:c.z.string(),enums:c.z.array(c.z.string()),attributes:c.z.array(c.z.object({name:c.z.string(),type_id:c.z.number()})),comment:c.z.string().nullable()}),nC=c.z.array(nO),nD=c.z.object({version:c.z.string(),version_number:c.z.number(),active_connections:c.z.number(),max_connections:c.z.number()}),nk="\n  SELECT\n    idx.indexrelid::int8 AS id,\n    idx.indrelid::int8 AS table_id,\n    n.nspname AS schema,\n    idx.indnatts AS number_of_attributes,\n    idx.indnkeyatts AS number_of_key_attributes,\n    idx.indisunique AS is_unique,\n    idx.indisprimary AS is_primary,\n    idx.indisexclusion AS is_exclusion,\n    idx.indimmediate AS is_immediate,\n    idx.indisclustered AS is_clustered,\n    idx.indisvalid AS is_valid,\n    idx.indcheckxmin AS check_xmin,\n    idx.indisready AS is_ready,\n    idx.indislive AS is_live,\n    idx.indisreplident AS is_replica_identity,\n    idx.indkey::smallint[] AS key_attributes,\n    idx.indcollation::integer[] AS collation,\n    idx.indclass::integer[] AS class,\n    idx.indoption::smallint[] AS options,\n    idx.indpred AS index_predicate,\n    obj_description(idx.indexrelid, 'pg_class') AS comment,\n    ix.indexdef as index_definition,\n    am.amname AS access_method,\n    jsonb_agg(\n      jsonb_build_object(\n        'attribute_number', a.attnum,\n        'attribute_name', a.attname,\n        'data_type', format_type(a.atttypid, a.atttypmod)\n      )\n      ORDER BY a.attnum\n    ) AS index_attributes\n  FROM\n    pg_index idx\n    JOIN pg_class c ON c.oid = idx.indexrelid\n    JOIN pg_namespace n ON c.relnamespace = n.oid\n    JOIN pg_am am ON c.relam = am.oid\n    JOIN pg_attribute a ON a.attrelid = c.oid AND a.attnum = ANY(idx.indkey)\n    JOIN pg_indexes ix ON c.relname = ix.indexname\n  GROUP BY\n    idx.indexrelid, idx.indrelid, n.nspname, idx.indnatts, idx.indnkeyatts, idx.indisunique, \n    idx.indisprimary, idx.indisexclusion, idx.indimmediate, idx.indisclustered, idx.indisvalid, \n    idx.indcheckxmin, idx.indisready, idx.indislive, idx.indisreplident, idx.indkey, \n    idx.indcollation, idx.indclass, idx.indoption, idx.indexprs, idx.indpred, ix.indexdef, am.amname\n",nU=c.z.object({id:c.z.number(),table_id:c.z.number(),schema:c.z.string(),number_of_attributes:c.z.number(),number_of_key_attributes:c.z.number(),is_unique:c.z.boolean(),is_primary:c.z.boolean(),is_exclusion:c.z.boolean(),is_immediate:c.z.boolean(),is_clustered:c.z.boolean(),is_valid:c.z.boolean(),check_xmin:c.z.boolean(),is_ready:c.z.boolean(),is_live:c.z.boolean(),is_replica_identity:c.z.boolean(),key_attributes:c.z.array(c.z.number()),collation:c.z.array(c.z.number()),class:c.z.array(c.z.number()),options:c.z.array(c.z.number()),index_predicate:c.z.string().nullable(),comment:c.z.string().nullable(),index_definition:c.z.string(),access_method:c.z.string(),index_attributes:c.z.array(c.z.object({attribute_number:c.z.number(),attribute_name:c.z.string(),data_type:c.z.string()}))}),nM=c.z.array(nU),nF=c.z.optional(nU),n$=c.z.object({grantor:c.z.string(),grantee:c.z.string(),privilege_type:c.z.union([c.z.literal("SELECT"),c.z.literal("INSERT"),c.z.literal("UPDATE"),c.z.literal("REFERENCES")]),is_grantable:c.z.boolean()}),nq=c.z.object({column_id:c.z.string(),relation_schema:c.z.string(),relation_name:c.z.string(),column_name:c.z.string(),privileges:c.z.array(n$)}),nH=c.z.array(nq);c.z.object({columnId:c.z.string(),grantee:c.z.string(),privilegeType:c.z.union([c.z.literal("ALL"),c.z.literal("SELECT"),c.z.literal("INSERT"),c.z.literal("UPDATE"),c.z.literal("REFERENCES")]),isGrantable:c.z.boolean().optional()});var nP={roles:{list:function(){let{includeDefaultRoles:n=!1,limit:e,offset:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a="\nwith\n  roles as (".concat(o,")\nselect\n  *\nfrom\n  roles\nwhere\n  true\n");return n||(a+=" and not pg_catalog.starts_with(name, 'pg_')"),e&&(a+=" limit ".concat(e)),t&&(a+=" offset ".concat(t)),{sql:a,zod:l}},retrieve:function(n){return{sql:"with roles as (".concat(o,") select * from roles where ").concat(u(n),";"),zod:d}},create:function(n){let{name:e,isSuperuser:t=!1,canCreateDb:a=!1,canCreateRole:r=!1,inheritRole:o=!0,canLogin:c=!1,isReplicationRole:s=!1,canBypassRls:l=!1,connectionLimit:d=-1,password:u,validUntil:m,memberOf:p=[],members:f=[],admins:g=[],config:h={}}=n;return{sql:"\ncreate role ".concat((0,i.yR)(e),"\n  ").concat(t?"superuser":"","\n  ").concat(a?"createdb":"","\n  ").concat(r?"createrole":"","\n  ").concat(o?"":"noinherit","\n  ").concat(c?"login":"","\n  ").concat(s?"replication":"","\n  ").concat(l?"bypassrls":"","\n  connection limit ").concat(d,"\n  ").concat(void 0===u?"":"password ".concat((0,i.i0)(u)),"\n  ").concat(void 0===m?"":"valid until ".concat((0,i.i0)(m)),"\n  ").concat(0===p.length?"":"in role ".concat(p.map(i.yR).join(",")),"\n  ").concat(0===f.length?"":"role ".concat(f.map(i.yR).join(",")),"\n  ").concat(0===g.length?"":"admin ".concat(g.map(i.yR).join(",")),"\n  ;\n").concat(Object.entries(h).map(n=>{let[t,a]=n;return"alter role ".concat((0,i.yR)(e)," set ").concat((0,i.yR)(t)," = ").concat((0,i.i0)(a),";")}).join("\n"),"\n")}},update:function(n,e){let{name:t,isSuperuser:a,canCreateDb:r,canCreateRole:c,inheritRole:s,canLogin:l,isReplicationRole:d,canBypassRls:m,connectionLimit:p,password:f,validUntil:g}=e;return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with roles as (".concat(o,")\n  select * into old from roles where ").concat(u(n),";\n  if old is null then\n    raise exception 'Cannot find role with id %', id;\n  end if;\n\n  execute(format('alter role %I\n    ").concat(void 0===a?"":a?"superuser":"nosuperuser","\n    ").concat(void 0===r?"":r?"createdb":"nocreatedb","\n    ").concat(void 0===c?"":c?"createrole":"nocreaterole","\n    ").concat(void 0===s?"":s?"inherit":"noinherit","\n    ").concat(void 0===l?"":l?"login":"nologin","\n    ").concat(void 0===d?"":d?"replication":"noreplication","\n    ").concat(void 0===m?"":m?"bypassrls":"nobypassrls","\n    ").concat(void 0===p?"":"connection limit ".concat(p),"\n    ").concat(void 0===f?"":"password ".concat((0,i.i0)(f)),"\n    ").concat(void 0===g?"":"valid until %L","\n  ', old.name").concat(void 0===g?"":", ".concat((0,i.i0)(g)),"));\n\n  ").concat(void 0===t?"":"\n  -- Using the same name in the rename clause gives an error, so only do it if the new name is different.\n  if ".concat((0,i.i0)(t)," != old.name then\n    execute(format('alter role %I rename to %I;', old.name, ").concat((0,i.i0)(t),"));\n  end if;\n  "),"\nend\n$$;\n")}},remove:function(n){let{ifExists:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with roles as (".concat(o,")\n  select * into old from roles where ").concat(u(n),";\n  if old is null then\n    raise exception 'Cannot find role with id %', id;\n  end if;\n\n  execute(format('drop role ").concat(e?"if exists":""," %I;', old.name));\nend\n$$;\n")}},zod:s},columns:{list:function(){let{tableId:n,includeSystemSchemas:e=!1,includedSchemas:t,excludedSchemas:a,limit:r,offset:o}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},c="\nwith\n  columns as (".concat(h,")\nselect\n  *\nfrom\n  columns\nwhere\n true\n"),s=f(t,a,e?void 0:m);return s&&(c+=" and schema ".concat(s)),void 0!==n&&(c+=" and table_id = ".concat((0,i.i0)(n)," ")),r&&(c="".concat(c," limit ").concat(r)),o&&(c="".concat(c," offset ").concat(o)),{sql:c,zod:_}},retrieve:function(n){return{sql:"WITH columns AS (".concat(h,") SELECT * FROM columns WHERE ").concat(v(n),";"),zod:E}},create:function(n){let{table_id:e,name:t,type:a,default_value:r,default_value_format:o="literal",is_identity:c=!1,identity_generation:s="BY DEFAULT",is_nullable:l,is_primary_key:d=!1,is_unique:u=!1,comment:m,check:p}=n,f="";if(c){if(void 0!==r)throw Error("Columns cannot both be identity and have a default value");f="GENERATED ".concat(s," AS IDENTITY")}else if(void 0!==r){let n="expression"===o?r:"'".concat((0,i.i0)(String(r)),"'");f="DEFAULT ".concat(n)}let g=[];return!1===l&&g.push("NOT NULL"),d&&g.push("PRIMARY KEY"),u&&g.push("UNIQUE"),p&&g.push("CHECK (".concat(p,")")),{sql:"\nDO $$\nDECLARE\n  v_schema name;\n  v_table name;\nBEGIN\n  SELECT n.nspname, c.relname INTO v_schema, v_table\n  FROM pg_class c \n  JOIN pg_namespace n ON n.oid = c.relnamespace\n  WHERE c.oid = ".concat((0,i.i0)(e),";\n\n  IF v_schema IS NULL THEN\n    RAISE EXCEPTION 'Table with id % not found', ").concat((0,i.i0)(e),";\n  END IF;\n\n  execute(format(\n    'ALTER TABLE %I.%I ADD COLUMN %I %s ").concat(f," ").concat(g.join(" "),"',\n    v_schema,\n    v_table,\n    ").concat((0,i.i0)(t),",\n    ").concat((0,i.i0)(a),"\n  ));\n  \n  ").concat(m?"execute(format('COMMENT ON COLUMN %I.%I.%I IS %L', v_schema, v_table, ".concat((0,i.i0)(t),", quote_ident(").concat((0,i.i0)(m),")));"):"","\nEND $$;")}},update:function(n,e){let{name:t,type:a,drop_default:r=!1,default_value:o,default_value_format:c="literal",is_identity:s,identity_generation:l="BY DEFAULT",is_nullable:d,is_unique:u,comment:m,check:p}=e;if(s&&void 0!==o)throw Error("Columns cannot both be identity and have a default value");return{sql:"\nDO $$\nDECLARE\n  v_schema name;\n  v_table name;\n  v_column name;\n  v_attnum int2;\n  r record;\nBEGIN\n  WITH RECURSIVE column_info AS (\n    ".concat(h,"\n  )\n  SELECT \n    schema, \n    ").concat((0,i.yR)("table"),",\n    name,\n    ordinal_position::int2\n  INTO v_schema, v_table, v_column, v_attnum\n  FROM column_info \n  WHERE ").concat(v({id:n}),";\n\n  IF v_schema IS NULL THEN\n    RAISE EXCEPTION 'Column with id % not found', ").concat((0,i.i0)(n),";\n  END IF;\n\n  ").concat(void 0!==d?"execute(format('ALTER TABLE %I.%I ALTER COLUMN %I ".concat(d?"DROP NOT NULL":"SET NOT NULL","', v_schema, v_table, v_column));"):"","\n\n  ").concat(a?"execute(format('ALTER TABLE %I.%I ALTER COLUMN %I TYPE %I USING %I::%I', v_schema, v_table, v_column, ".concat((0,i.i0)(a),", v_column, ").concat((0,i.i0)(a),"));"):"","\n\n  ").concat(r?"execute(format('ALTER TABLE %I.%I ALTER COLUMN %I DROP DEFAULT', v_schema, v_table, v_column));":"","\n\n  ").concat(void 0!==o?"execute(format('ALTER TABLE %I.%I ALTER COLUMN %I SET DEFAULT %s', v_schema, v_table, v_column, ".concat("expression"===c?o:(0,i.i0)(o),"));"):"","\n  \n  ").concat(void 0!==s?"execute(format('ALTER TABLE %I.%I ALTER COLUMN %I ".concat(s?"ADD GENERATED ".concat(l," AS IDENTITY"):"DROP IDENTITY IF EXISTS","', v_schema, v_table, v_column));"):"","\n  \n  ").concat(void 0!==u?"execute(format('ALTER TABLE %I.%I ".concat(u?"ADD UNIQUE":"DROP CONSTRAINT IF EXISTS %I_key","', v_schema, v_table, ").concat(u?"(".concat((0,i.i0)(t||"v_column"),")"):"v_column","));"):"","\n\n  ").concat(void 0!==m?"execute(format('COMMENT ON COLUMN %I.%I.%I IS %L', v_schema, v_table, v_column, ".concat((0,i.i0)(m),"));"):"","\n\n  ").concat(void 0!==p?"\n    -- Drop existing check constraint if any\n    FOR r IN (\n      SELECT conname \n      FROM pg_constraint \n      WHERE conrelid = format('%I.%I', v_schema, v_table)::regclass \n      AND contype = 'c' \n      AND conkey = ARRAY[v_attnum]\n    ) LOOP\n      EXECUTE format('ALTER TABLE %I.%I DROP CONSTRAINT %I', v_schema, v_table, r.conname);\n    END LOOP;\n    -- Create the new constraints if mentionned\n    ".concat(null!==p?"execute(format('ALTER TABLE %I.%I ADD CONSTRAINT %I CHECK (%s)', v_schema, v_table, v_column || '_check', ".concat((0,i.i0)(p),"));"):"","\n  "):"","\n  ").concat(t?"execute(format('ALTER TABLE %I.%I RENAME COLUMN %I TO %I', v_schema, v_table, v_column, ".concat((0,i.i0)(t),"));"):"","\nEND $$;")}},remove:function(n){let{cascade:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{sql:"\nDO $$\nDECLARE\n  v_schema name;\n  v_table name;\n  v_column name;\nBEGIN\n  WITH RECURSIVE column_info AS (\n    ".concat(h,"\n  )\n  SELECT schema, ").concat((0,i.yR)("table"),", name\n  INTO v_schema, v_table, v_column\n  FROM column_info \n  WHERE id = ").concat((0,i.i0)(n),";\n\n  IF v_schema IS NULL THEN\n    RAISE EXCEPTION 'Column with id % not found', ").concat((0,i.i0)(n),";\n  END IF;\n\n  EXECUTE format(\n    'ALTER TABLE %I.%I DROP COLUMN %I ").concat(e?"CASCADE":"RESTRICT","',\n    v_schema,\n    v_table,\n    v_column\n  );\nEND $$;")}},zod:b},schemas:{list:function(){let{includeSystemSchemas:n=!1,limit:e,offset:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=y;return n||(a="".concat(a," and not (n.nspname in (").concat(m.map(i.i0).join(","),"))")),e&&(a="".concat(a," limit ").concat(e)),t&&(a="".concat(a," offset ").concat(t)),{sql:a,zod:N}},retrieve:function(n){let{id:e,name:t}=n;return e?{sql:"".concat(y," and n.oid = ").concat((0,i.i0)(e),";"),zod:A}:{sql:"".concat(y," and n.nspname = ").concat((0,i.i0)(t),";"),zod:A}},create:function(n){let{name:e,owner:t}=n;return{sql:"create schema ".concat((0,i.yR)(e),"\n  ").concat(void 0===t?"":"authorization ".concat((0,i.yR)(t)),";\n")}},update:function(n,e){let{id:t,name:a}=n,{name:r,owner:o}=e;return{sql:"\ndo $$\ndeclare\n  id oid := ".concat(void 0===t?"".concat((0,i.i0)(a),"::regnamespace"):(0,i.i0)(t),";\n  old record;\n  new_name text := ").concat(void 0===r?null:(0,i.i0)(r),";\n  new_owner text := ").concat(void 0===o?null:(0,i.i0)(o),";\nbegin\n  select * into old from pg_namespace where oid = id;\n  if old is null then\n    raise exception 'Cannot find schema with id %', id;\n  end if;\n\n  if new_owner is not null then\n    execute(format('alter schema %I owner to %I;', old.nspname, new_owner));\n  end if;\n\n  -- Using the same name in the rename clause gives an error, so only do it if the new name is different.\n  if new_name is not null and new_name != old.nspname then\n    execute(format('alter schema %I rename to %I;', old.nspname, new_name));\n  end if;\nend\n$$;\n")}},remove:function(n){let{id:e,name:t}=n,{cascade:a=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{sql:"\ndo $$\ndeclare\n  id oid := ".concat(void 0===e?"".concat((0,i.i0)(t),"::regnamespace"):(0,i.i0)(e),";\n  old record;\n  cascade bool := ").concat((0,i.i0)(a),";\nbegin\n  select * into old from pg_namespace where oid = id;\n  if old is null then\n    raise exception 'Cannot find schema with id %', id;\n  end if;\n\n  execute(format('drop schema %I %s;', old.nspname, case when cascade then 'cascade' else 'restrict' end));\nend\n$$;\n")}},zod:x},tables:a,functions:r,tablePrivileges:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i="\nwith table_privileges as (".concat(V,")\nselect *\nfrom table_privileges\n"),o=f(e,t,n?void 0:m);return o&&(i+=" where schema ".concat(o)),a&&(i+=" limit ".concat(a)),r&&(i+=" offset ".concat(r)),{sql:i,zod:Q}},retrieve:function(n){let{id:e,name:t,schema:a="public"}=n;return e?{sql:"\nwith table_privileges as (".concat(V,")\nselect *\nfrom table_privileges\nwhere table_privileges.relation_id = ").concat((0,i.i0)(e),";"),zod:X}:{sql:"\nwith table_privileges as (".concat(V,")\nselect *\nfrom table_privileges\nwhere table_privileges.schema = ").concat((0,i.i0)(a),"\n  and table_privileges.name = ").concat((0,i.i0)(t),"\n"),zod:X}},grant:function(n){return{sql:"\ndo $$\nbegin\n".concat(n.map(n=>{let{privilegeType:e,relationId:t,grantee:a,isGrantable:r}=n;return"execute format('grant ".concat(e," on table %s to ").concat("public"===a.toLowerCase()?"public":(0,i.yR)(a)," ").concat(r?"with grant option":"","', ").concat(t,"::regclass);")}).join("\n"),"\nend $$;\n")}},revoke:function(n){return{sql:"\ndo $$\nbegin\n".concat(n.map(n=>{let{privilegeType:e,relationId:t,grantee:a}=n;return"execute format('revoke ".concat(e," on table %s from ").concat("public"===a.toLowerCase()?"public":(0,i.yR)(a),"', ").concat(t,"::regclass);")}).join("\n"),"\nend $$;\n")}},zod:Z},publications:{list:function(){let{limit:n,offset:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t="with publications as (".concat(K,") select * from publications");return n&&(t+=" limit ".concat(n)),e&&(t+=" offset ".concat(e)),{sql:t,zod:nt}},retrieve:function(n){return{sql:"with publications as (".concat(K,") select * from publications where ").concat(nr(n),";"),zod:na}},create:function(n){let e,{name:t,publish_insert:a=!1,publish_update:r=!1,publish_delete:o=!1,publish_truncate:c=!1,tables:s=null}=n;e=null==s?"FOR ALL TABLES":0===s.length?"":"FOR TABLE ".concat(s.map(n=>{if(!n.includes("."))return(0,i.yR)(n);let[e,...t]=n.split("."),a=t.join(".");return"".concat((0,i.yR)(e),".").concat((0,i.yR)(a))}).join(","));let l=[...a?["insert"]:[],...r?["update"]:[],...o?["delete"]:[],...c?["truncate"]:[]];return{sql:"CREATE PUBLICATION ".concat((0,i.yR)(t)," ").concat(e," WITH (publish = '").concat(l.join(","),"');")}},update:function(n,e){var t,a,r,o;return{sql:"\ndo $$\ndeclare\n  old record;\n  new_name text := ".concat(void 0===e.name?null:(0,i.i0)(e.name),";\n  new_owner text := ").concat(void 0===e.owner?null:(0,i.i0)(e.owner),";\n  new_publish_insert bool := ").concat(null!==(t=e.publish_insert)&&void 0!==t?t:null,";\n  new_publish_update bool := ").concat(null!==(a=e.publish_update)&&void 0!==a?a:null,";\n  new_publish_delete bool := ").concat(null!==(r=e.publish_delete)&&void 0!==r?r:null,";\n  new_publish_truncate bool := ").concat(null!==(o=e.publish_truncate)&&void 0!==o?o:null,";\n  new_tables text := ").concat(void 0===e.tables?null:(0,i.i0)(null===e.tables?"all tables":e.tables.map(n=>{if(!n.includes("."))return(0,i.yR)(n);let[e,...t]=n.split("."),a=t.join(".");return"".concat((0,i.yR)(e),".").concat((0,i.yR)(a))}).join(", ")),";\nbegin\n  with publications as (").concat(K,")\n  select * into old from publications where ").concat(nr(n),";\n  if old is null then\n    raise exception 'Cannot find publication with %', ").concat((0,i.i0)(nr(n)),";\n  end if;\n  if new_tables is null then\n    null;\n  elsif new_tables = 'all tables' AND old.tables is not null then\n      -- Need to recreate because going from list of tables <-> all tables with alter is not possible.\n      execute(format('drop publication %1$I; create publication %1$I for all tables;', old.name));\n  else\n    if old.tables is null then\n      -- Need to recreate because going from list of tables <-> all tables with alter is not possible.\n      execute(format('drop publication %1$I; create publication %1$I;', old.name));\n    elsif exists(select from pg_publication_rel where prpubid = old.id) then\n      execute(\n        format(\n          'alter publication %I drop table %s',\n          old.name,\n          (select string_agg(prrelid::regclass::text, ', ') from pg_publication_rel where prpubid = old.id)\n        )\n      );\n    end if;\n\n    -- At this point the publication must have no tables.\n    if new_tables != '' then\n      execute(format('alter publication %I add table %s', old.name, new_tables));\n    end if;\n  end if;\n\n  execute(\n    format(\n      'alter publication %I set (publish = %L);',\n      old.name,\n      concat_ws(\n        ', ',\n        case when coalesce(new_publish_insert, old.publish_insert) then 'insert' end,\n        case when coalesce(new_publish_update, old.publish_update) then 'update' end,\n        case when coalesce(new_publish_delete, old.publish_delete) then 'delete' end,\n        case when coalesce(new_publish_truncate, old.publish_truncate) then 'truncate' end\n      )\n    )\n  );\n\n  if new_owner is not null then\n    execute(format('alter publication %I owner to %I;', old.name, new_owner));\n  end if;\n\n  -- Using the same name in the rename clause gives an error, so only do it if the new name is different.\n  if new_name is not null and new_name != old.name then\n    execute(format('alter publication %I rename to %I;', old.name, new_name));\n  end if;\nend $$;")}},remove:function(n){return{sql:"\n    do $$\n    declare\n      v_name name;\n    begin\n      with publications as (".concat(K,")\n      select name into v_name from publications where ").concat(nr(n),";\n      if v_name is not null then\n            execute(format('drop publication if exists %I', v_name));\n      end if;\n    end\n    $$;\n    ")}},zod:ne},extensions:{list:function(){let{limit:n,offset:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=ni;return n&&(t="".concat(t," LIMIT ").concat(n)),e&&(t="".concat(t," OFFSET ").concat(e)),{sql:t,zod:nc}},retrieve:function(n){let{name:e}=n;return{sql:"".concat(ni," WHERE name = ").concat((0,i.i0)(e),";"),zod:ns}},create:function(n){let{name:e,schema:t,version:a,cascade:r=!1}=n;return{sql:"\ndo $$\nbegin\n  -- Check if extension exists\n  if exists (\n    select 1 from pg_extension where extname = ".concat((0,i.i0)(e),"\n  ) then\n    raise exception 'Extension % already exists', ").concat((0,i.i0)(e),";\n  end if;\n\n  execute(format('CREATE EXTENSION %I\n    %s\n    %s\n    %s',\n    ").concat((0,i.i0)(e),",\n    ").concat(t?"'SCHEMA ' || quote_ident(".concat((0,i.i0)(t),")"):"''",",\n    ").concat(a?"'VERSION ' || quote_ident(".concat((0,i.i0)(a),")"):"''",",\n    ").concat(r?"'CASCADE'":"''","\n));\nend\n$$;")}},update:function(n,e){let{update:t=!1,version:a,schema:r}=e;return{sql:"\ndo $$\ndeclare\n  ext record;\nbegin\n  -- Check if extension exists\n  select * into ext from pg_extension where extname = ".concat((0,i.i0)(n),";\n  if ext is null then\n    raise exception 'Extension % does not exist', ").concat((0,i.i0)(n),";\n  end if;\n\n  ").concat(t?"execute(format('ALTER EXTENSION %I UPDATE %s',\n    ".concat((0,i.i0)(n),",\n    ").concat(a?"'TO ' || quote_ident(".concat((0,i.i0)(a),")"):"''","\n  ));"):"","\n\n  ").concat(r?"execute(format('ALTER EXTENSION %I SET SCHEMA %I',\n    ".concat((0,i.i0)(n),",\n    ").concat((0,i.i0)(r),"\n  ));"):"","\nend\n$$;")}},remove:function(n){let{cascade:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{sql:"\ndo $$\ndeclare\n  ext record;\nbegin\n    execute(format('DROP EXTENSION %I %s',\n      ".concat((0,i.i0)(n),",\n      ").concat(e?"'CASCADE'":"'RESTRICT'","\n    ));\nend\n$$;")}},zod:no},config:{list:function(){let{limit:n,offset:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t="\nSELECT\n  name,\n  setting,\n  category,\n  TRIM(split_part(category, '/', 1)) AS group,\n  TRIM(split_part(category, '/', 2)) AS subgroup,\n  unit,\n  short_desc,\n  extra_desc,\n  context,\n  vartype,\n  source,\n  min_val,\n  max_val,\n  enumvals,\n  boot_val,\n  reset_val,\n  sourcefile,\n  sourceline,\n  pending_restart\nFROM\n  pg_settings\nORDER BY\n  category,\n  name\n";return n&&(t+=" LIMIT ".concat(n)),e&&(t+=" OFFSET ".concat(e)),{sql:t,zod:nd}},zod:nl},materializedViews:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r,includeColumns:i=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=nf({includeColumns:i}),c=f(e,t,n?void 0:m);return c&&(o+=" where schema ".concat(c)),a&&(o+=" limit ".concat(a)),r&&(o+=" offset ".concat(r)),{sql:o,zod:nm}},retrieve:function(n){let e=function(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name)," and ").concat((0,i.yR)("schema")," = ").concat((0,i.i0)(n.schema));throw Error("Must provide either id or name and schema")}(n);return{sql:"".concat(nf({includeColumns:!0})," where ").concat(e,";"),zod:np}},zod:nu},foreignTables:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r,includeColumns:i=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=n_({includeColumns:i}),c=f(e,t,n?void 0:m);return c&&(o+=" where schema ".concat(c)),a&&(o+=" limit ".concat(a)),r&&(o+=" offset ".concat(r)),{sql:o,zod:nh}},retrieve:function(n){return{sql:"".concat(n_({includeColumns:!0})," where ").concat(function(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name)," and ").concat((0,i.yR)("schema")," = ").concat((0,i.i0)(n.schema));throw Error("Must provide either id or name and schema")}(n),";"),zod:nb}},zod:ng},views:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r,includeColumns:i=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=nx({includeColumns:i}),c=f(e,t,n?void 0:m);return c&&(o+=" where schema ".concat(c)),a&&(o+=" limit ".concat(a)),r&&(o+=" offset ".concat(r)),{sql:o,zod:nv}},retrieve:function(n){let e=function(n){if("id"in n&&n.id)return"".concat((0,i.yR)("id")," = ").concat((0,i.i0)(n.id));if("name"in n&&n.name&&n.schema)return"".concat((0,i.yR)("name")," = ").concat((0,i.i0)(n.name)," and ").concat((0,i.yR)("schema")," = ").concat((0,i.i0)(n.schema));throw Error("Must provide either id or name and schema")}(n);return{sql:"".concat(nx({includeColumns:!0})," where ").concat(e,";"),zod:ny}},zod:nE},policies:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i="\n    with policies as (".concat(nN,")\n    select *\n    from policies\n    "),o=f(e,t,n?void 0:m);return o&&(i+="where schema ".concat(o)),a&&(i+=" limit ".concat(a)),r&&(i+=" offset ".concat(r)),{sql:i,zod:nz}},retrieve:function(n){return{sql:"with policies as (".concat(nN,") select * from policies where ").concat(nS(n),";"),zod:nw}},create:function(n){let{name:e,schema:t="public",table:a,definition:r,check:o,action:c="PERMISSIVE",command:s="ALL",roles:l=["public"]}=n;return{sql:"\ncreate policy ".concat((0,i.yR)(e)," on ").concat((0,i.yR)(t),".").concat((0,i.yR)(a),"\n  as ").concat(c,"\n  for ").concat(s,"\n  to ").concat(l.map(i.yR).join(","),"\n  ").concat(r?"using (".concat(r,")"):"","\n  ").concat(o?"with check (".concat(o,")"):"",";")}},update:function(n,e){let{name:t,definition:a,check:r,roles:o}=e,c=nS(n);return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with policies as (".concat(nN,")\n  select * into old from policies where ").concat(c,";\n  if old is null then\n    raise exception 'Cannot find policy with id %', ").concat((0,i.i0)(c),";\n  end if;\n\n  ").concat(a?"execute(format('alter policy %I on %I.%I using (%s);', old.name, old.schema, old.table, ".concat((0,i.i0)(a),"));"):"","\n  ").concat(r?"execute(format('alter policy %I on %I.%I with check (%s);', old.name, old.schema, old.table, ".concat((0,i.i0)(r),"));"):"","\n  ").concat(o?"execute(format('alter policy %I on %I.%I to %s;', old.name, old.schema, old.table, ".concat((0,i.i0)(o.map(i.yR).join(",")),"));"):"","\n  ").concat(t?"execute(format('alter policy %I on %I.%I rename to %I;', old.name, old.schema, old.table, ".concat((0,i.i0)(t),"));"):"","\nend\n$$;")}},remove:function(n){let e=nS(n);return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with policies as (".concat(nN,")\n  select * into old from policies where ").concat(e,";\n  if old is null then\n    raise exception 'Cannot find policy with id %', ").concat((0,i.i0)(e),";\n  end if;\n\n  execute(format('drop policy %I on %I.%I;', old.name, old.schema, old.table));\nend\n$$;")}},zod:nA},triggers:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i="with triggers as (".concat(nR,") select * from triggers"),o=f(e,t,n?void 0:m);return o&&(i+=" where schema ".concat(o)),a&&(i+=" limit ".concat(a)),r&&(i+=" offset ".concat(r)),{sql:i,zod:nj}},retrieve:function(n){let e=nI(n);return{sql:"with triggers as (".concat(nR,") select * from triggers where ").concat(e,";"),zod:nL}},create:function(n){let{name:e,schema:t="public",table:a,function_schema:r="public",function_name:o,function_args:s=[],activation:l,events:d,orientation:u,condition:m}=n,p="".concat((0,i.yR)(t),".").concat((0,i.yR)(a)),f="".concat((0,i.yR)(r),".").concat((0,i.yR)(o)),g=d.join(" OR "),h=s.map(i.i0).join(",");return{sql:"CREATE TRIGGER ".concat((0,i.yR)(e)," ").concat(l," ").concat(g," ON ").concat(p," ").concat(u?"FOR EACH ".concat(u):""," ").concat(m?"WHEN (".concat(m,")"):""," EXECUTE FUNCTION ").concat(f,"(").concat(h,");"),zod:c.z.void()}},update:function(n,e){let t=nI(n);return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with triggers as (".concat(nR,")\n  select * into old from triggers where ").concat(t,";\n  \n  if old is null then\n    raise exception 'Cannot find trigger: %', ").concat((0,i.i0)(t),";\n  end if;\n\n  ").concat(e.enabled_mode?"\n  execute(format('alter table %I.%I ".concat("DISABLED"===e.enabled_mode?"DISABLE":"ENABLE"+("ALWAYS"===e.enabled_mode||"REPLICA"===e.enabled_mode?" "+e.enabled_mode:"")," TRIGGER %I', \n    old.schema, old.table, old.name));"):"","\n\n  ").concat(e.name?"\n    -- Using the same name in the rename clause gives an error, so only do it if the new name is different.\n  if ".concat((0,i.i0)(e.name)," != old.name then\n    execute(format('alter trigger %I on %I.%I rename to %I;', old.name, old.schema, old.table, ").concat((0,i.i0)(e.name),"));\n  end if;"):"","\nend\n$$;")}},remove:function(n){let{cascade:e=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=nI(n);return{sql:"\ndo $$\ndeclare\n  old record;\nbegin\n  with triggers as (".concat(nR,")\n  select * into old from triggers where ").concat(t,";\n  \n  if old is null then\n    raise exception 'Cannot find trigger';\n  end if;\n\n  execute(format('DROP TRIGGER %I ON %I.%I ").concat(e?"CASCADE":"","',\n    old.name, old.schema, old.table));\nend\n$$;"),zod:c.z.void()}},zod:nT},types:{list:function(){let{includeArrayTypes:n=!1,includeSystemSchemas:e=!1,includedSchemas:t,excludedSchemas:a,limit:r,offset:i}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o="\nselect\n  t.oid::int8 as id,\n  t.typname as name,\n  n.nspname as schema,\n  format_type (t.oid, null) as format,\n  coalesce(t_enums.enums, '[]') as enums,\n  coalesce(t_attributes.attributes, '[]') as attributes,\n  obj_description (t.oid, 'pg_type') as comment\nfrom\n  pg_type t\n  left join pg_namespace n on n.oid = t.typnamespace\n  left join (\n    select\n      enumtypid,\n      jsonb_agg(enumlabel order by enumsortorder) as enums\n    from\n      pg_enum\n    group by\n      enumtypid\n  ) as t_enums on t_enums.enumtypid = t.oid\n  left join (\n    select\n      oid,\n      jsonb_agg(\n        jsonb_build_object('name', a.attname, 'type_id', a.atttypid::int8)\n        order by a.attnum asc\n      ) as attributes\n    from\n      pg_class c\n      join pg_attribute a on a.attrelid = c.oid\n    where\n      c.relkind = 'c' and not a.attisdropped\n    group by\n      c.oid\n  ) as t_attributes on t_attributes.oid = t.typrelid\nwhere\n  (\n    t.typrelid = 0\n    or (\n      select\n        c.relkind = 'c'\n      from\n        pg_class c\n      where\n        c.oid = t.typrelid\n    )\n  )\n";n||(o+=" and not exists (\n      select from pg_type el\n      where el.oid = t.typelem\n        and el.typarray = t.oid\n    )");let c=f(t,a,e?void 0:m);return c&&(o+=" and n.nspname ".concat(c)),r&&(o+=" limit ".concat(r)),i&&(o+=" offset ".concat(i)),{sql:o,zod:nC}},zod:nO},version:{retrieve:function(){return{sql:"\nselect\n  version(),\n  current_setting('server_version_num')::int8 as version_number,\n  (\n    select\n      count(*) as active_connections\n    from\n      pg_stat_activity\n  ) as active_connections,\n  current_setting('max_connections')::int8 as max_connections\n",zod:nD}},zod:nD},indexes:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,limit:a,offset:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i="\n    with indexes as (".concat(nk,")\n    select *\n    from indexes\n  "),o=f(e,t,n?void 0:m);return o&&(i+=" where schema ".concat(o)),a&&(i+=" limit ".concat(a)),r&&(i+=" offset ".concat(r)),{sql:i,zod:nM}},retrieve:function(n){let{id:e}=n;return{sql:"\n    with indexes as (".concat(nk,")\n    select *\n    from indexes\n    where id = ").concat((0,i.i0)(e),";\n  "),zod:nF}},zod:nU},columnPrivileges:{list:function(){let{includeSystemSchemas:n=!1,includedSchemas:e,excludedSchemas:t,columnIds:a,limit:r,offset:o}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},c="\n  with column_privileges as (".concat("\n-- Lists each column's privileges in the form of:\n--\n-- [\n--   {\n--     \"column_id\": \"12345.1\",\n--     \"relation_schema\": \"public\",\n--     \"relation_name\": \"mytable\",\n--     \"column_name\": \"mycolumn\",\n--     \"privileges\": [\n--       {\n--         \"grantor\": \"postgres\",\n--         \"grantee\": \"myrole\",\n--         \"privilege_type\": \"SELECT\",\n--         \"is_grantable\": false\n--       },\n--       ...\n--     ]\n--   },\n--   ...\n-- ]\n--\n-- Modified from information_schema.column_privileges. We try to be as close as\n-- possible to the view definition, obtained from:\n--\n-- select pg_get_viewdef('information_schema.column_privileges');\n--\n-- The main differences are:\n-- - we include column privileges for materialized views\n--   (reason for exclusion in information_schema.column_privileges:\n--    https://www.postgresql.org/message-id/9136.1502740844%40sss.pgh.pa.us)\n-- - we query a.attrelid and a.attnum to generate column_id\n-- - table_catalog is omitted\n-- - table_schema -> relation_schema, table_name -> relation_name\n--\n-- Column privileges are intertwined with table privileges in that table\n-- privileges override column privileges. E.g. if we do:\n--\n-- grant all on mytable to myrole;\n--\n-- Then myrole is granted privileges for ALL columns. Likewise, if we do:\n--\n-- grant all (id) on mytable to myrole;\n-- revoke all on mytable from myrole;\n--\n-- Then the grant on the id column is revoked.\n--\n-- This is unlike how grants for schemas and tables interact, where you need\n-- privileges for BOTH the schema the table is in AND the table itself in order\n-- to access the table.\n\nselect (x.attrelid || '.' || x.attnum) as column_id,\n       nc.nspname as relation_schema,\n       x.relname as relation_name,\n       x.attname as column_name,\n       coalesce(\n         jsonb_agg(\n           jsonb_build_object(\n             'grantor', u_grantor.rolname,\n             'grantee', grantee.rolname,\n             'privilege_type', x.prtype,\n             'is_grantable', x.grantable\n           )\n         ),\n         '[]'\n       ) as privileges\nfrom\n  (select pr_c.grantor,\n          pr_c.grantee,\n          a.attrelid,\n          a.attnum,\n          a.attname,\n          pr_c.relname,\n          pr_c.relnamespace,\n          pr_c.prtype,\n          pr_c.grantable,\n          pr_c.relowner\n   from\n     (select pg_class.oid,\n             pg_class.relname,\n             pg_class.relnamespace,\n             pg_class.relowner,\n             (aclexplode(coalesce(pg_class.relacl, acldefault('r', pg_class.relowner)))).grantor as grantor,\n             (aclexplode(coalesce(pg_class.relacl, acldefault('r', pg_class.relowner)))).grantee as grantee,\n             (aclexplode(coalesce(pg_class.relacl, acldefault('r', pg_class.relowner)))).privilege_type as privilege_type,\n             (aclexplode(coalesce(pg_class.relacl, acldefault('r', pg_class.relowner)))).is_grantable as is_grantable\n      from pg_class\n      where (pg_class.relkind = any (array['r',\n                                           'v',\n                                           'm',\n                                           'f',\n                                           'p'])) ) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),\n                                                    pg_attribute a\n   where ((a.attrelid = pr_c.oid)\n          and (a.attnum > 0)\n          and (not a.attisdropped))\n   union select pr_a.grantor,\n                pr_a.grantee,\n                pr_a.attrelid,\n                pr_a.attnum,\n                pr_a.attname,\n                c.relname,\n                c.relnamespace,\n                pr_a.prtype,\n                pr_a.grantable,\n                c.relowner\n   from\n     (select a.attrelid,\n             a.attnum,\n             a.attname,\n             (aclexplode(coalesce(a.attacl, acldefault('c', cc.relowner)))).grantor as grantor,\n             (aclexplode(coalesce(a.attacl, acldefault('c', cc.relowner)))).grantee as grantee,\n             (aclexplode(coalesce(a.attacl, acldefault('c', cc.relowner)))).privilege_type as privilege_type,\n             (aclexplode(coalesce(a.attacl, acldefault('c', cc.relowner)))).is_grantable as is_grantable\n      from (pg_attribute a\n            join pg_class cc on ((a.attrelid = cc.oid)))\n      where ((a.attnum > 0)\n             and (not a.attisdropped))) pr_a(attrelid, attnum, attname, grantor, grantee, prtype, grantable),\n                                        pg_class c\n   where ((pr_a.attrelid = c.oid)\n          and (c.relkind = any (ARRAY['r',\n                                      'v',\n                                      'm',\n                                      'f',\n                                      'p'])))) x,\n     pg_namespace nc,\n     pg_authid u_grantor,\n  (select pg_authid.oid,\n          pg_authid.rolname\n   from pg_authid\n   union all select (0)::oid as oid,\n                    'PUBLIC') grantee(oid, rolname)\nwhere ((x.relnamespace = nc.oid)\n       and (x.grantee = grantee.oid)\n       and (x.grantor = u_grantor.oid)\n       and (x.prtype = any (ARRAY['INSERT',\n                                  'SELECT',\n                                  'UPDATE',\n                                  'REFERENCES']))\n       and (pg_has_role(u_grantor.oid, 'USAGE')\n            or pg_has_role(grantee.oid, 'USAGE')\n            or (grantee.rolname = 'PUBLIC')))\ngroup by column_id,\n         nc.nspname,\n         x.relname,\n         x.attname\n",")\n  select *\n  from column_privileges\n  "),s=[],l=f(e,t,n?void 0:m);return l&&s.push("relation_schema ".concat(l)),(null==a?void 0:a.length)&&s.push("column_id in (".concat(a.map(i.i0).join(","),")")),s.length>0&&(c+=" where ".concat(s.join(" and "))),r&&(c+=" limit ".concat(r)),o&&(c+=" offset ".concat(o)),{sql:c,zod:nH}},grant:function(n){return{sql:"\ndo $$\ndeclare\n  col record;\nbegin\n".concat(n.map(n=>{let{privilegeType:e,columnId:t,grantee:a,isGrantable:r}=n,[o,c]=t.split(".");return"\nselect *\nfrom pg_attribute a\nwhere a.attrelid = ".concat((0,i.i0)(o),"\n  and a.attnum = ").concat((0,i.i0)(c),"\ninto col;\nexecute format(\n  'grant ").concat(e," (%I) on %s to ").concat("public"===a.toLowerCase()?"public":(0,i.yR)(a)," ").concat(r?"with grant option":"","',\n  col.attname,\n  col.attrelid::regclass\n);")}).join("\n"),"\nend $$;\n")}},revoke:function(n){return{sql:"\ndo $$\ndeclare\n  col record;\nbegin\n".concat(n.map(n=>{let{privilegeType:e,columnId:t,grantee:a}=n,[r,o]=t.split(".");return"\nselect *\nfrom pg_attribute a\nwhere a.attrelid = ".concat((0,i.i0)(r),"\n  and a.attnum = ").concat((0,i.i0)(o),"\ninto col;\nexecute format(\n  'revoke ").concat(e," (%I) on %s from ").concat("public"===a.toLowerCase()?"public":(0,i.yR)(a),"',\n  col.attname,\n  col.attrelid::regclass\n);")}).join("\n"),"\nend $$;\n")}},zod:nq},query:t(43260)}},79755:function(n,e,t){t.d(e,{WU:function(){return s},yR:function(){return o},i0:function(){return c}});let a=new Set(["AES128","AES256","ALL","ALLOWOVERWRITE","ANALYSE","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASYMMETRIC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BLANKSASNULL","BOTH","BYTEDICT","CASE","CAST","CHECK","COLLATE","COLUMN","CONSTRAINT","CREATE","CREDENTIALS","CROSS","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURRENT_USER_ID","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DELTA","DELTA32K","DESC","DISABLE","DISTINCT","DO","ELSE","EMPTYASNULL","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","END","EXCEPT","EXPLICIT","FALSE","FETCH","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GRANT","GROUP","GZIP","HAVING","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTERSECT","INTO","IS","ISNULL","JOIN","LATERAL","LEADING","LEFT","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","LZO","LZOP","MINUS","MOSTLY13","MOSTLY32","MOSTLY8","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OLD","ON","ONLY","OPEN","OR","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PLACING","PRIMARY","RAW","READRATIO","RECOVER","REFERENCES","REJECTLOG","RESORT","RESTORE","RETURNING","RIGHT","SELECT","SESSION_USER","SIMILAR","SOME","SYMMETRIC","SYSDATE","SYSTEM","TABLE","TAG","TDES","TEXT255","TEXT32K","THEN","TO","TOP","TRAILING","TRUE","TRUNCATECOLUMNS","UNION","UNIQUE","USER","USING","VARIADIC","VERBOSE","WALLET","WHEN","WHERE","WINDOW","WITH","WITHOUT"]);function r(n){return n.replace("T"," ").replace("Z","+00")}function i(n,e,t){let a="";for(let[r,i]of(a+=n?" (":"(",e.entries()))a+=(0===r?"":", ")+t(i);return a+")"}function o(n){if(null==n)throw Error("SQL identifier cannot be null or undefined");if(!1===n)return'"f"';if(!0===n)return'"t"';if(n instanceof Date)return'"'.concat(r(n.toISOString()),'"');if(Array.isArray(n)){let e=[];for(let t of n){if(!0===Array.isArray(t))throw TypeError("Nested array to grouped list conversion is not supported for SQL identifier");e.push(o(t))}return e.toString()}if(n===Object(n))throw Error("SQL identifier cannot be an object");let e=String(n).slice(0);if(!0===/^[_a-z][\d$_a-z]*$/.test(e)&&!1==!!a.has(e.toUpperCase()))return e;let t='"';for(let n of e)t+='"'===n?n+n:n;return t+'"'}function c(n){let e,t="";if(null==n)return"NULL";if("bigint"==typeof n)return BigInt(n).toString();if(n===Number.POSITIVE_INFINITY)return"'Infinity'";if(n===Number.NEGATIVE_INFINITY)return"'-Infinity'";if(Number.isNaN(n))return"'NaN'";if("number"==typeof n)return Number(n).toString();if(!1===n)return"'f'";if(!0===n)return"'t'";if(n instanceof Date)return"'".concat(r(n.toISOString()),"'");if(Array.isArray(n)){let e=[];for(let[t,a]of n.entries())!0===Array.isArray(a)?e.push(i(0!==t,a,c)):e.push(c(a));return e.toString()}n===Object(n)?(e="jsonb",t=JSON.stringify(n)):t=String(n).slice(0);let a=!1,o="'";for(let n of t)"'"===n?o+=n+n:"\\"===n?(o+=n+n,a=!0):o+=n;return o+="'",!0===a&&(o="E".concat(o)),e&&(o+="::".concat(e)),o}function s(n){for(var e=arguments.length,t=Array(e>1?e-1:0),a=1;a<e;a++)t[a-1]=arguments[a];return function(n,e){let t=0,a="%(%|(\\d+\\$)?[",s=RegExp(a+="ILs])","g");return n.replace(s,(n,a)=>{if("%"===a)return"%";let s=t,l=a.split("$");if(l.length>1&&(s=Number.parseInt(l[0],10)-1,a=l[1]),s<0)throw Error("specified argument 0 but arguments start at 1");if(s>e.length-1)throw Error("too few arguments");return(t=s+1,"I"===a)?o(e[s]):"L"===a?c(e[s]):"s"===a?function n(e){if(null==e)return"";if(!1===e)return"f";if(!0===e)return"t";if(e instanceof Date)return r(e.toISOString());if(Array.isArray(e)){let t=[];for(let[a,r]of e.entries())null!=r&&(!0===Array.isArray(r)?t.push(i(0!==a,r,n)):t.push(n(r)));return t.toString()}return e===Object(e)?JSON.stringify(e):String(e).toString().slice(0)}(e[s]):void 0})}(n,t)}},65702:function(n,e,t){t.d(e,{A:function(){return r}});var a=t(3137);class r{from(n,e){return new a.L({name:n,schema:null!=e?e:"public"})}}},44619:function(n,e,t){t.d(e,{Ab:function(){return c},Ff:function(){return r},Lm:function(){return i},YF:function(){return o},rh:function(){return l},xM:function(){return s}});var a=t(79755);function r(n,e){let t="select count(*) from ".concat(m(n)),{filters:a}=null!=e?e:{};return a&&(t=d(t,a)),t+";"}function i(n,e){let t="truncate ".concat(m(n)),{cascade:a}=null!=e?e:{};return a&&(t+=" cascade"),t+";"}function o(n,e,t){if(!e||0===e.length)throw{message:"no filters for this delete query"};let r="delete from ".concat(m(n)),{returning:i,enumArrayColumns:o}=null!=t?t:{};return e&&(r=d(r,e)),i&&(r+=void 0===o||0===o.length?" returning *":" returning *, ".concat(o.map(n=>"".concat((0,a.yR)(n),"::text[]")).join(","))),r+";"}function c(n,e,t){if(!e||0===e.length)throw{message:"no value to insert"};let{returning:r,enumArrayColumns:i}=null!=t?t:{},o=Object.keys(e[0]).map(n=>(0,a.yR)(n)).join(","),c="";return c=0==o.length?(0,a.WU)("insert into %1$s select from jsonb_populate_recordset(null::%1$s, %2$s)",m(n),(0,a.i0)(JSON.stringify(e))):(0,a.WU)("insert into %1$s (%2$s) select %2$s from jsonb_populate_recordset(null::%1$s, %3$s)",m(n),o,(0,a.i0)(JSON.stringify(e))),r&&(c+=void 0===i||0===i.length?" returning *":" returning *, ".concat(i.map(n=>"".concat((0,a.yR)(n),"::text[]")).join(","))),c+";"}function s(n,e,t){let r="";r+="select ".concat(null!=e?e:"*"," from ").concat(m(n));let{filters:i,pagination:o,sorts:c}=null!=t?t:{};if(i&&(r=d(r,i)),c&&(r=function(n,e){let t=e.filter(n=>n.column);return 0===t.length?n:n+=" order by ".concat(t.map(n=>{let e=n.ascending?"asc":"desc",t=n.nullsFirst?"nulls first":"nulls last";return"".concat((0,a.yR)(n.table),".").concat((0,a.yR)(n.column)," ").concat(e," ").concat(t)}).join(", "))}(r,c)),o){let{limit:n,offset:e}=null!=o?o:{};r+=" limit ".concat((0,a.i0)(n)," offset ").concat((0,a.i0)(e))}return r+";"}function l(n,e,t){let{filters:r,returning:i,enumArrayColumns:o}=null!=t?t:{};if(!r||0===r.length)throw{message:"no filters for this update query"};let c=Object.keys(e).map(n=>(0,a.yR)(n)).join(","),s=(0,a.WU)("update %1$s set (%2$s) = (select %2$s from json_populate_record(null::%1$s, %3$s))",m(n),c,(0,a.i0)(JSON.stringify(e)));return r&&(s=d(s,r)),i&&(s+=void 0===o||0===o.length?" returning *":" returning *, ".concat(o.map(n=>"".concat((0,a.yR)(n),"::text[]")).join(","))),s+";"}function d(n,e){return 0===e.length?n:n+=" where ".concat(e.map(n=>{switch(n.operator){case"in":let e;return e=Array.isArray(n.value)?n.value.map(n=>u(n)):String(n.value).split(",").map(n=>u(n)),"".concat((0,a.yR)(n.column)," ").concat(n.operator," (").concat(e.join(","),")");case"is":return function(n){let e=String(n.value);switch(e){case"null":case"false":case"true":case"not null":return"".concat((0,a.yR)(n.column)," ").concat(n.operator," ").concat(e);default:return"".concat((0,a.yR)(n.column)," ").concat(n.operator," ").concat(u(n.value))}}(n);default:return"".concat((0,a.yR)(n.column)," ").concat(n.operator," ").concat(u(n.value))}}).join(" and "))}function u(n){return"string"!=typeof n||(null==n?void 0:n.startsWith("ARRAY["))&&(null==n?void 0:n.endsWith("]"))?n:(0,a.i0)(n)}function m(n){return"".concat((0,a.yR)(n.schema),".").concat((0,a.yR)(n.name))}},3137:function(n,e,t){t.d(e,{L:function(){return i}});var a=t(98219),r=t(98732);class i{count(){return new r.t(this.table,"count")}delete(n){return new r.t(this.table,"delete",void 0,n)}insert(n,e){return new r.t(this.table,"insert",n,e)}select(n){return new r.t(this.table,"select",n)}update(n,e){return new r.t(this.table,"update",n,e)}truncate(n){return new r.t(this.table,"truncate",void 0,n)}constructor(n){(0,a._)(this,"table",void 0),this.table=n}}},98732:function(n,e,t){t.d(e,{t:function(){return i}});var a=t(98219),r=t(36558);class i{filter(n,e,t){return this.filters.push({column:n,operator:e,value:t}),this}match(n){return Object.entries(n).map(n=>{let[e,t]=n;this.filters.push({column:e,operator:"=",value:t})}),this}order(n,e){let t=!(arguments.length>2)||void 0===arguments[2]||arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.sorts.push({table:n,column:e,ascending:t,nullsFirst:a}),this}range(n,e){return this._getQueryModifier().range(n,e)}toSql(){return this._getQueryModifier().toSql()}_getQueryModifier(){return new r.m(this.table,this.action,{actionValue:this.actionValue,actionOptions:this.actionOptions,filters:this.filters,sorts:this.sorts})}constructor(n,e,t,r){(0,a._)(this,"table",void 0),(0,a._)(this,"action",void 0),(0,a._)(this,"actionValue",void 0),(0,a._)(this,"actionOptions",void 0),(0,a._)(this,"filters",void 0),(0,a._)(this,"sorts",void 0),this.table=n,this.action=e,this.actionValue=t,this.actionOptions=r,this.filters=[],this.sorts=[]}}},36558:function(n,e,t){t.d(e,{m:function(){return i}});var a=t(98219),r=t(44619);class i{range(n,e){return this.pagination={offset:n,limit:e-n+1},this}toSql(){try{var n;let{actionValue:e,actionOptions:t,filters:a,sorts:i}=null!==(n=this.options)&&void 0!==n?n:{};switch(this.action){case"count":return(0,r.Ff)(this.table,{filters:a});case"delete":return(0,r.YF)(this.table,a,{returning:null==t?void 0:t.returning,enumArrayColumns:null==t?void 0:t.enumArrayColumns});case"insert":return(0,r.Ab)(this.table,e,{returning:null==t?void 0:t.returning,enumArrayColumns:null==t?void 0:t.enumArrayColumns});case"select":return(0,r.xM)(this.table,e,{filters:a,pagination:this.pagination,sorts:i});case"update":return(0,r.rh)(this.table,e,{filters:a,returning:null==t?void 0:t.returning,enumArrayColumns:null==t?void 0:t.enumArrayColumns});case"truncate":return(0,r.Lm)(this.table,{cascade:null==t?void 0:t.cascade});default:return""}}catch(n){throw n}}constructor(n,e,t){(0,a._)(this,"table",void 0),(0,a._)(this,"action",void 0),(0,a._)(this,"options",void 0),(0,a._)(this,"pagination",void 0),this.table=n,this.action=e,this.options=t}}},43260:function(n,e,t){t.r(e),t.d(e,{Query:function(){return a.A},QueryAction:function(){return o.L},QueryFilter:function(){return i.t},QueryModifier:function(){return c.m},countQuery:function(){return r.Ff},deleteQuery:function(){return r.YF},insertQuery:function(){return r.Ab},selectQuery:function(){return r.xM},truncateQuery:function(){return r.Lm},updateQuery:function(){return r.rh}});var a=t(65702),r=t(44619),i=t(98732),o=t(3137),c=t(36558)},42161:function(n,e,t){t.d(e,{J:function(){return a}});let a=[{name:"Dark",value:"dark"},{name:"Light",value:"light"},{name:"Classic Dark",value:"classic-dark"},{name:"System",value:"system"}]}}]);